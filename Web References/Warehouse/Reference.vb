'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace Warehouse
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="svcWarehouseSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class svcWarehouse
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetROItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddNewItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateItemInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSuppInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddNewSuppOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateSuppInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSuppOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMaxPOIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPOHeadInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPODetailInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddNewPOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdatePOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletePOOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSupplierLOVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemLOVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetItemStockLOVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPOLOVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRecieveInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRecieveHeaderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRecieveDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTotalRecieveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMaxRecIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddNewRecieveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateRecieveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteRecieveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPOHeaderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPODetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSupplierListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetWarehouseItemListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMovementItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAdjHeaderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAdjDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMoveHeaderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMoveDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStockItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStockQTYOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStockOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStockLOVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStockListLOVOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMaxMovIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMaxAdjIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddMoveItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateAdjustmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateMovementOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAdjustmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMovementOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddAdjustStockOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAdjustmentItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPOReportSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPOReportDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRecivedPOSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRecivedPODetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMovementSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMovementDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAdjustmentSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAdjustmentDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRptRecieveItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRptMoveItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRptAdjustItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRptPriceItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRptRecieveQTYOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStockReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPOSMontlyLostProfitReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/KatalaWebServices/svcWarehouse.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetROItemCompleted As GetROItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemInfoCompleted As GetItemInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event AddNewItemCompleted As AddNewItemCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateItemInfoCompleted As UpdateItemInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteItemCompleted As DeleteItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSuppInfoCompleted As GetSuppInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event AddNewSuppCompleted As AddNewSuppCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateSuppInfoCompleted As UpdateSuppInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSuppCompleted As DeleteSuppCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMaxPOIdCompleted As GetMaxPOIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPOHeadInfoCompleted As GetPOHeadInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPODetailInfoCompleted As GetPODetailInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event AddNewPOCompleted As AddNewPOCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdatePOCompleted As UpdatePOCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletePOCompleted As DeletePOCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSupplierLOVCompleted As GetSupplierLOVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemLOVCompleted As GetItemLOVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetItemStockLOVCompleted As GetItemStockLOVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPOLOVCompleted As GetPOLOVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRecieveInfoCompleted As GetRecieveInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRecieveHeaderCompleted As GetRecieveHeaderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRecieveDetailCompleted As GetRecieveDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTotalRecieveCompleted As GetTotalRecieveCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMaxRecIdCompleted As GetMaxRecIdCompletedEventHandler
        
        '''<remarks/>
        Public Event AddNewRecieveCompleted As AddNewRecieveCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateRecieveCompleted As UpdateRecieveCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteRecieveCompleted As DeleteRecieveCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPOHeaderCompleted As GetPOHeaderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPODetailCompleted As GetPODetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSupplierListCompleted As GetSupplierListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetWarehouseItemListCompleted As GetWarehouseItemListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMovementItemCompleted As GetMovementItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAdjHeaderCompleted As GetAdjHeaderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAdjDetailCompleted As GetAdjDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMoveHeaderCompleted As GetMoveHeaderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMoveDetailCompleted As GetMoveDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStockItemCompleted As GetStockItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStockQTYCompleted As GetStockQTYCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStockCompleted As GetStockCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStockLOVCompleted As GetStockLOVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStockListLOVCompleted As GetStockListLOVCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMaxMovIdCompleted As GetMaxMovIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMaxAdjIdCompleted As GetMaxAdjIdCompletedEventHandler
        
        '''<remarks/>
        Public Event AddMoveItemCompleted As AddMoveItemCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateAdjustmentCompleted As UpdateAdjustmentCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateMovementCompleted As UpdateMovementCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAdjustmentCompleted As GetAdjustmentCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMovementCompleted As GetMovementCompletedEventHandler
        
        '''<remarks/>
        Public Event AddAdjustStockCompleted As AddAdjustStockCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAdjustmentItemCompleted As GetAdjustmentItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPOReportSummaryCompleted As GetPOReportSummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPOReportDetailCompleted As GetPOReportDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRecivedPOSummaryCompleted As GetRecivedPOSummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRecivedPODetailCompleted As GetRecivedPODetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMovementSummaryCompleted As GetMovementSummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMovementDetailCompleted As GetMovementDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAdjustmentSummaryCompleted As GetAdjustmentSummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAdjustmentDetailCompleted As GetAdjustmentDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRptRecieveItemCompleted As GetRptRecieveItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRptMoveItemCompleted As GetRptMoveItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRptAdjustItemCompleted As GetRptAdjustItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRptPriceItemCompleted As GetRptPriceItemCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRptRecieveQTYCompleted As GetRptRecieveQTYCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStockReportCompleted As GetStockReportCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPOSMontlyLostProfitReportCompleted As GetPOSMontlyLostProfitReportCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetROItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetROItem(ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetROItem", New Object() {strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetROItem(ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetROItem", New Object() {strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetROItem(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetROItemAsync(ByVal strAPP_ID As String)
            Me.GetROItemAsync(strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetROItemAsync(ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetROItemOperationCompleted Is Nothing) Then
                Me.GetROItemOperationCompleted = AddressOf Me.OnGetROItemOperationCompleted
            End If
            Me.InvokeAsync("GetROItem", New Object() {strAPP_ID}, Me.GetROItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetROItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetROItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetROItemCompleted(Me, New GetROItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemInfo(ByVal strItemCode As String, ByVal strItemName As String, ByVal strItemNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetItemInfo", New Object() {strItemCode, strItemName, strItemNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetItemInfo(ByVal strItemCode As String, ByVal strItemName As String, ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetItemInfo", New Object() {strItemCode, strItemName, strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetItemInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemInfoAsync(ByVal strItemCode As String, ByVal strItemName As String, ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetItemInfoAsync(strItemCode, strItemName, strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemInfoAsync(ByVal strItemCode As String, ByVal strItemName As String, ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetItemInfoOperationCompleted Is Nothing) Then
                Me.GetItemInfoOperationCompleted = AddressOf Me.OnGetItemInfoOperationCompleted
            End If
            Me.InvokeAsync("GetItemInfo", New Object() {strItemCode, strItemName, strItemNo, strAPP_ID}, Me.GetItemInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemInfoCompleted(Me, New GetItemInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddNewItem(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("AddNewItem", New Object() {adoDS, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddNewItem(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddNewItem", New Object() {adoDS, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddNewItem(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddNewItemAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.AddNewItemAsync(adoDS, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddNewItemAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.AddNewItemOperationCompleted Is Nothing) Then
                Me.AddNewItemOperationCompleted = AddressOf Me.OnAddNewItemOperationCompleted
            End If
            Me.InvokeAsync("AddNewItem", New Object() {adoDS, strAPP_ID}, Me.AddNewItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddNewItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddNewItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddNewItemCompleted(Me, New AddNewItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateItemInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateItemInfo(ByVal adoDSItem As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.Invoke("UpdateItemInfo", New Object() {adoDSItem, strAPP_ID})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdateItemInfo(ByVal adoDSItem As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateItemInfo", New Object() {adoDSItem, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdateItemInfo(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateItemInfoAsync(ByVal adoDSItem As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.UpdateItemInfoAsync(adoDSItem, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateItemInfoAsync(ByVal adoDSItem As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.UpdateItemInfoOperationCompleted Is Nothing) Then
                Me.UpdateItemInfoOperationCompleted = AddressOf Me.OnUpdateItemInfoOperationCompleted
            End If
            Me.InvokeAsync("UpdateItemInfo", New Object() {adoDSItem, strAPP_ID}, Me.UpdateItemInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateItemInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateItemInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateItemInfoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteItem(ByVal strItemCode As String, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("DeleteItem", New Object() {strItemCode, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteItem(ByVal strItemCode As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteItem", New Object() {strItemCode, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteItem(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteItemAsync(ByVal strItemCode As String, ByVal strAPP_ID As String)
            Me.DeleteItemAsync(strItemCode, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteItemAsync(ByVal strItemCode As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.DeleteItemOperationCompleted Is Nothing) Then
                Me.DeleteItemOperationCompleted = AddressOf Me.OnDeleteItemOperationCompleted
            End If
            Me.InvokeAsync("DeleteItem", New Object() {strItemCode, strAPP_ID}, Me.DeleteItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteItemCompleted(Me, New DeleteItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSuppInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSuppInfo(ByVal strSuppCode As String, ByVal strSuppName As String, ByVal strSuppNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSuppInfo", New Object() {strSuppCode, strSuppName, strSuppNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetSuppInfo(ByVal strSuppCode As String, ByVal strSuppName As String, ByVal strSuppNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetSuppInfo", New Object() {strSuppCode, strSuppName, strSuppNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetSuppInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSuppInfoAsync(ByVal strSuppCode As String, ByVal strSuppName As String, ByVal strSuppNo As String, ByVal strAPP_ID As String)
            Me.GetSuppInfoAsync(strSuppCode, strSuppName, strSuppNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSuppInfoAsync(ByVal strSuppCode As String, ByVal strSuppName As String, ByVal strSuppNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetSuppInfoOperationCompleted Is Nothing) Then
                Me.GetSuppInfoOperationCompleted = AddressOf Me.OnGetSuppInfoOperationCompleted
            End If
            Me.InvokeAsync("GetSuppInfo", New Object() {strSuppCode, strSuppName, strSuppNo, strAPP_ID}, Me.GetSuppInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSuppInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSuppInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSuppInfoCompleted(Me, New GetSuppInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewSupp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddNewSupp(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("AddNewSupp", New Object() {adoDS, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddNewSupp(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddNewSupp", New Object() {adoDS, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddNewSupp(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddNewSuppAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.AddNewSuppAsync(adoDS, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddNewSuppAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.AddNewSuppOperationCompleted Is Nothing) Then
                Me.AddNewSuppOperationCompleted = AddressOf Me.OnAddNewSuppOperationCompleted
            End If
            Me.InvokeAsync("AddNewSupp", New Object() {adoDS, strAPP_ID}, Me.AddNewSuppOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddNewSuppOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddNewSuppCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddNewSuppCompleted(Me, New AddNewSuppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSuppInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateSuppInfo(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.Invoke("UpdateSuppInfo", New Object() {adoDS, strAPP_ID})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdateSuppInfo(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateSuppInfo", New Object() {adoDS, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdateSuppInfo(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateSuppInfoAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.UpdateSuppInfoAsync(adoDS, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateSuppInfoAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.UpdateSuppInfoOperationCompleted Is Nothing) Then
                Me.UpdateSuppInfoOperationCompleted = AddressOf Me.OnUpdateSuppInfoOperationCompleted
            End If
            Me.InvokeAsync("UpdateSuppInfo", New Object() {adoDS, strAPP_ID}, Me.UpdateSuppInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateSuppInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateSuppInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateSuppInfoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSupp", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteSupp(ByVal strSuppCode As String, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("DeleteSupp", New Object() {strSuppCode, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteSupp(ByVal strSuppCode As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteSupp", New Object() {strSuppCode, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteSupp(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteSuppAsync(ByVal strSuppCode As String, ByVal strAPP_ID As String)
            Me.DeleteSuppAsync(strSuppCode, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSuppAsync(ByVal strSuppCode As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.DeleteSuppOperationCompleted Is Nothing) Then
                Me.DeleteSuppOperationCompleted = AddressOf Me.OnDeleteSuppOperationCompleted
            End If
            Me.InvokeAsync("DeleteSupp", New Object() {strSuppCode, strAPP_ID}, Me.DeleteSuppOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSuppOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSuppCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSuppCompleted(Me, New DeleteSuppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxPOId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMaxPOId(ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("GetMaxPOId", New Object() {strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMaxPOId(ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMaxPOId", New Object() {strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMaxPOId(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMaxPOIdAsync(ByVal strAPP_ID As String)
            Me.GetMaxPOIdAsync(strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMaxPOIdAsync(ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMaxPOIdOperationCompleted Is Nothing) Then
                Me.GetMaxPOIdOperationCompleted = AddressOf Me.OnGetMaxPOIdOperationCompleted
            End If
            Me.InvokeAsync("GetMaxPOId", New Object() {strAPP_ID}, Me.GetMaxPOIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMaxPOIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMaxPOIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMaxPOIdCompleted(Me, New GetMaxPOIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPOHeadInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPOHeadInfo(ByVal strPONo As String, ByVal strSuppName As String, ByVal strPONumber As String, ByVal strPOStatus As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPOHeadInfo", New Object() {strPONo, strSuppName, strPONumber, strPOStatus, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPOHeadInfo(ByVal strPONo As String, ByVal strSuppName As String, ByVal strPONumber As String, ByVal strPOStatus As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPOHeadInfo", New Object() {strPONo, strSuppName, strPONumber, strPOStatus, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPOHeadInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPOHeadInfoAsync(ByVal strPONo As String, ByVal strSuppName As String, ByVal strPONumber As String, ByVal strPOStatus As String, ByVal strAPP_ID As String)
            Me.GetPOHeadInfoAsync(strPONo, strSuppName, strPONumber, strPOStatus, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPOHeadInfoAsync(ByVal strPONo As String, ByVal strSuppName As String, ByVal strPONumber As String, ByVal strPOStatus As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetPOHeadInfoOperationCompleted Is Nothing) Then
                Me.GetPOHeadInfoOperationCompleted = AddressOf Me.OnGetPOHeadInfoOperationCompleted
            End If
            Me.InvokeAsync("GetPOHeadInfo", New Object() {strPONo, strSuppName, strPONumber, strPOStatus, strAPP_ID}, Me.GetPOHeadInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPOHeadInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPOHeadInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPOHeadInfoCompleted(Me, New GetPOHeadInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPODetailInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPODetailInfo(ByVal strPONo As String, ByVal strItemNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPODetailInfo", New Object() {strPONo, strItemNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPODetailInfo(ByVal strPONo As String, ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPODetailInfo", New Object() {strPONo, strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPODetailInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPODetailInfoAsync(ByVal strPONo As String, ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetPODetailInfoAsync(strPONo, strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPODetailInfoAsync(ByVal strPONo As String, ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetPODetailInfoOperationCompleted Is Nothing) Then
                Me.GetPODetailInfoOperationCompleted = AddressOf Me.OnGetPODetailInfoOperationCompleted
            End If
            Me.InvokeAsync("GetPODetailInfo", New Object() {strPONo, strItemNo, strAPP_ID}, Me.GetPODetailInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPODetailInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPODetailInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPODetailInfoCompleted(Me, New GetPODetailInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewPO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddNewPO(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("AddNewPO", New Object() {adoDSHeader, adoDSDetail, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddNewPO(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddNewPO", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddNewPO(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddNewPOAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.AddNewPOAsync(adoDSHeader, adoDSDetail, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddNewPOAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.AddNewPOOperationCompleted Is Nothing) Then
                Me.AddNewPOOperationCompleted = AddressOf Me.OnAddNewPOOperationCompleted
            End If
            Me.InvokeAsync("AddNewPO", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, Me.AddNewPOOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddNewPOOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddNewPOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddNewPOCompleted(Me, New AddNewPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdatePO(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.Invoke("UpdatePO", New Object() {adoDSHeader, adoDSDetail, strAPP_ID})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdatePO(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdatePO", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdatePO(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePOAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.UpdatePOAsync(adoDSHeader, adoDSDetail, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePOAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.UpdatePOOperationCompleted Is Nothing) Then
                Me.UpdatePOOperationCompleted = AddressOf Me.OnUpdatePOOperationCompleted
            End If
            Me.InvokeAsync("UpdatePO", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, Me.UpdatePOOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdatePOOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdatePOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdatePOCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePO", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeletePO(ByVal strPONo As String, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("DeletePO", New Object() {strPONo, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginDeletePO(ByVal strPONo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeletePO", New Object() {strPONo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeletePO(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeletePOAsync(ByVal strPONo As String, ByVal strAPP_ID As String)
            Me.DeletePOAsync(strPONo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletePOAsync(ByVal strPONo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.DeletePOOperationCompleted Is Nothing) Then
                Me.DeletePOOperationCompleted = AddressOf Me.OnDeletePOOperationCompleted
            End If
            Me.InvokeAsync("DeletePO", New Object() {strPONo, strAPP_ID}, Me.DeletePOOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletePOOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletePOCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletePOCompleted(Me, New DeletePOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupplierLOV", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSupplierLOV(ByVal strSupplierNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSupplierLOV", New Object() {strSupplierNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetSupplierLOV(ByVal strSupplierNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetSupplierLOV", New Object() {strSupplierNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetSupplierLOV(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSupplierLOVAsync(ByVal strSupplierNo As String, ByVal strAPP_ID As String)
            Me.GetSupplierLOVAsync(strSupplierNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSupplierLOVAsync(ByVal strSupplierNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetSupplierLOVOperationCompleted Is Nothing) Then
                Me.GetSupplierLOVOperationCompleted = AddressOf Me.OnGetSupplierLOVOperationCompleted
            End If
            Me.InvokeAsync("GetSupplierLOV", New Object() {strSupplierNo, strAPP_ID}, Me.GetSupplierLOVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSupplierLOVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSupplierLOVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSupplierLOVCompleted(Me, New GetSupplierLOVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemLOV", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemLOV(ByVal strItemNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetItemLOV", New Object() {strItemNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetItemLOV(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetItemLOV", New Object() {strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetItemLOV(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemLOVAsync(ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetItemLOVAsync(strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemLOVAsync(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetItemLOVOperationCompleted Is Nothing) Then
                Me.GetItemLOVOperationCompleted = AddressOf Me.OnGetItemLOVOperationCompleted
            End If
            Me.InvokeAsync("GetItemLOV", New Object() {strItemNo, strAPP_ID}, Me.GetItemLOVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemLOVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemLOVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemLOVCompleted(Me, New GetItemLOVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemStockLOV", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetItemStockLOV(ByVal strItemNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetItemStockLOV", New Object() {strItemNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetItemStockLOV(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetItemStockLOV", New Object() {strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetItemStockLOV(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetItemStockLOVAsync(ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetItemStockLOVAsync(strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetItemStockLOVAsync(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetItemStockLOVOperationCompleted Is Nothing) Then
                Me.GetItemStockLOVOperationCompleted = AddressOf Me.OnGetItemStockLOVOperationCompleted
            End If
            Me.InvokeAsync("GetItemStockLOV", New Object() {strItemNo, strAPP_ID}, Me.GetItemStockLOVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetItemStockLOVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetItemStockLOVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetItemStockLOVCompleted(Me, New GetItemStockLOVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPOLOV", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPOLOV(ByVal strPONo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPOLOV", New Object() {strPONo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPOLOV(ByVal strPONo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPOLOV", New Object() {strPONo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPOLOV(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPOLOVAsync(ByVal strPONo As String, ByVal strAPP_ID As String)
            Me.GetPOLOVAsync(strPONo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPOLOVAsync(ByVal strPONo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetPOLOVOperationCompleted Is Nothing) Then
                Me.GetPOLOVOperationCompleted = AddressOf Me.OnGetPOLOVOperationCompleted
            End If
            Me.InvokeAsync("GetPOLOV", New Object() {strPONo, strAPP_ID}, Me.GetPOLOVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPOLOVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPOLOVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPOLOVCompleted(Me, New GetPOLOVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecieveInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRecieveInfo(ByVal strPONo As String, ByVal strStartDate As String, ByVal strEndDate As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRecieveInfo", New Object() {strPONo, strStartDate, strEndDate, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRecieveInfo(ByVal strPONo As String, ByVal strStartDate As String, ByVal strEndDate As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRecieveInfo", New Object() {strPONo, strStartDate, strEndDate, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRecieveInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRecieveInfoAsync(ByVal strPONo As String, ByVal strStartDate As String, ByVal strEndDate As String, ByVal strAPP_ID As String)
            Me.GetRecieveInfoAsync(strPONo, strStartDate, strEndDate, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRecieveInfoAsync(ByVal strPONo As String, ByVal strStartDate As String, ByVal strEndDate As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetRecieveInfoOperationCompleted Is Nothing) Then
                Me.GetRecieveInfoOperationCompleted = AddressOf Me.OnGetRecieveInfoOperationCompleted
            End If
            Me.InvokeAsync("GetRecieveInfo", New Object() {strPONo, strStartDate, strEndDate, strAPP_ID}, Me.GetRecieveInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRecieveInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRecieveInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRecieveInfoCompleted(Me, New GetRecieveInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecieveHeader", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRecieveHeader(ByVal strPONo As String, ByVal strRecId As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRecieveHeader", New Object() {strPONo, strRecId, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRecieveHeader(ByVal strPONo As String, ByVal strRecId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRecieveHeader", New Object() {strPONo, strRecId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRecieveHeader(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRecieveHeaderAsync(ByVal strPONo As String, ByVal strRecId As String, ByVal strAPP_ID As String)
            Me.GetRecieveHeaderAsync(strPONo, strRecId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRecieveHeaderAsync(ByVal strPONo As String, ByVal strRecId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetRecieveHeaderOperationCompleted Is Nothing) Then
                Me.GetRecieveHeaderOperationCompleted = AddressOf Me.OnGetRecieveHeaderOperationCompleted
            End If
            Me.InvokeAsync("GetRecieveHeader", New Object() {strPONo, strRecId, strAPP_ID}, Me.GetRecieveHeaderOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRecieveHeaderOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRecieveHeaderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRecieveHeaderCompleted(Me, New GetRecieveHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecieveDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRecieveDetail(ByVal strPONo As String, ByVal strRecId As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRecieveDetail", New Object() {strPONo, strRecId, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRecieveDetail(ByVal strPONo As String, ByVal strRecId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRecieveDetail", New Object() {strPONo, strRecId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRecieveDetail(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRecieveDetailAsync(ByVal strPONo As String, ByVal strRecId As String, ByVal strAPP_ID As String)
            Me.GetRecieveDetailAsync(strPONo, strRecId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRecieveDetailAsync(ByVal strPONo As String, ByVal strRecId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetRecieveDetailOperationCompleted Is Nothing) Then
                Me.GetRecieveDetailOperationCompleted = AddressOf Me.OnGetRecieveDetailOperationCompleted
            End If
            Me.InvokeAsync("GetRecieveDetail", New Object() {strPONo, strRecId, strAPP_ID}, Me.GetRecieveDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRecieveDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRecieveDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRecieveDetailCompleted(Me, New GetRecieveDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTotalRecieve", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTotalRecieve(ByVal strPONo As String, ByVal strItemNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTotalRecieve", New Object() {strPONo, strItemNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTotalRecieve(ByVal strPONo As String, ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTotalRecieve", New Object() {strPONo, strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTotalRecieve(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTotalRecieveAsync(ByVal strPONo As String, ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetTotalRecieveAsync(strPONo, strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTotalRecieveAsync(ByVal strPONo As String, ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetTotalRecieveOperationCompleted Is Nothing) Then
                Me.GetTotalRecieveOperationCompleted = AddressOf Me.OnGetTotalRecieveOperationCompleted
            End If
            Me.InvokeAsync("GetTotalRecieve", New Object() {strPONo, strItemNo, strAPP_ID}, Me.GetTotalRecieveOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTotalRecieveOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTotalRecieveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTotalRecieveCompleted(Me, New GetTotalRecieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxRecId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMaxRecId(ByVal strPONo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMaxRecId", New Object() {strPONo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMaxRecId(ByVal strPONo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMaxRecId", New Object() {strPONo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMaxRecId(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMaxRecIdAsync(ByVal strPONo As String, ByVal strAPP_ID As String)
            Me.GetMaxRecIdAsync(strPONo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMaxRecIdAsync(ByVal strPONo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMaxRecIdOperationCompleted Is Nothing) Then
                Me.GetMaxRecIdOperationCompleted = AddressOf Me.OnGetMaxRecIdOperationCompleted
            End If
            Me.InvokeAsync("GetMaxRecId", New Object() {strPONo, strAPP_ID}, Me.GetMaxRecIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMaxRecIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMaxRecIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMaxRecIdCompleted(Me, New GetMaxRecIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewRecieve", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddNewRecieve(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("AddNewRecieve", New Object() {adoDSHeader, adoDSDetail, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddNewRecieve(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddNewRecieve", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddNewRecieve(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddNewRecieveAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.AddNewRecieveAsync(adoDSHeader, adoDSDetail, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddNewRecieveAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.AddNewRecieveOperationCompleted Is Nothing) Then
                Me.AddNewRecieveOperationCompleted = AddressOf Me.OnAddNewRecieveOperationCompleted
            End If
            Me.InvokeAsync("AddNewRecieve", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, Me.AddNewRecieveOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddNewRecieveOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddNewRecieveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddNewRecieveCompleted(Me, New AddNewRecieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateRecieve", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateRecieve(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.Invoke("UpdateRecieve", New Object() {adoDSHeader, adoDSDetail, strAPP_ID})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdateRecieve(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateRecieve", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdateRecieve(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRecieveAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.UpdateRecieveAsync(adoDSHeader, adoDSDetail, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateRecieveAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.UpdateRecieveOperationCompleted Is Nothing) Then
                Me.UpdateRecieveOperationCompleted = AddressOf Me.OnUpdateRecieveOperationCompleted
            End If
            Me.InvokeAsync("UpdateRecieve", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, Me.UpdateRecieveOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateRecieveOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateRecieveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateRecieveCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteRecieve", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteRecieve(ByVal lngRecId As Long, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("DeleteRecieve", New Object() {lngRecId, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteRecieve(ByVal lngRecId As Long, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteRecieve", New Object() {lngRecId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteRecieve(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteRecieveAsync(ByVal lngRecId As Long, ByVal strAPP_ID As String)
            Me.DeleteRecieveAsync(lngRecId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteRecieveAsync(ByVal lngRecId As Long, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.DeleteRecieveOperationCompleted Is Nothing) Then
                Me.DeleteRecieveOperationCompleted = AddressOf Me.OnDeleteRecieveOperationCompleted
            End If
            Me.InvokeAsync("DeleteRecieve", New Object() {lngRecId, strAPP_ID}, Me.DeleteRecieveOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteRecieveOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteRecieveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteRecieveCompleted(Me, New DeleteRecieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPOHeader", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPOHeader(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strOption As String, ByVal strApp_id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPOHeader", New Object() {dtStart, dtEnd, strOption, strApp_id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPOHeader(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strOption As String, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPOHeader", New Object() {dtStart, dtEnd, strOption, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPOHeader(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPOHeaderAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strOption As String, ByVal strApp_id As String)
            Me.GetPOHeaderAsync(dtStart, dtEnd, strOption, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPOHeaderAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strOption As String, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.GetPOHeaderOperationCompleted Is Nothing) Then
                Me.GetPOHeaderOperationCompleted = AddressOf Me.OnGetPOHeaderOperationCompleted
            End If
            Me.InvokeAsync("GetPOHeader", New Object() {dtStart, dtEnd, strOption, strApp_id}, Me.GetPOHeaderOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPOHeaderOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPOHeaderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPOHeaderCompleted(Me, New GetPOHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPODetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPODetail(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal adoDSHeader As System.Data.DataSet, ByVal strApp_id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPODetail", New Object() {dtStart, dtEnd, adoDSHeader, strApp_id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPODetail(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal adoDSHeader As System.Data.DataSet, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPODetail", New Object() {dtStart, dtEnd, adoDSHeader, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPODetail(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPODetailAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal adoDSHeader As System.Data.DataSet, ByVal strApp_id As String)
            Me.GetPODetailAsync(dtStart, dtEnd, adoDSHeader, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPODetailAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal adoDSHeader As System.Data.DataSet, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.GetPODetailOperationCompleted Is Nothing) Then
                Me.GetPODetailOperationCompleted = AddressOf Me.OnGetPODetailOperationCompleted
            End If
            Me.InvokeAsync("GetPODetail", New Object() {dtStart, dtEnd, adoDSHeader, strApp_id}, Me.GetPODetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPODetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPODetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPODetailCompleted(Me, New GetPODetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupplierList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSupplierList(ByVal strStatus As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSupplierList", New Object() {strStatus, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetSupplierList(ByVal strStatus As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetSupplierList", New Object() {strStatus, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetSupplierList(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSupplierListAsync(ByVal strStatus As String, ByVal strAPP_ID As String)
            Me.GetSupplierListAsync(strStatus, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSupplierListAsync(ByVal strStatus As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetSupplierListOperationCompleted Is Nothing) Then
                Me.GetSupplierListOperationCompleted = AddressOf Me.OnGetSupplierListOperationCompleted
            End If
            Me.InvokeAsync("GetSupplierList", New Object() {strStatus, strAPP_ID}, Me.GetSupplierListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSupplierListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSupplierListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSupplierListCompleted(Me, New GetSupplierListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarehouseItemList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWarehouseItemList(ByVal strWarehouseName As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetWarehouseItemList", New Object() {strWarehouseName, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetWarehouseItemList(ByVal strWarehouseName As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetWarehouseItemList", New Object() {strWarehouseName, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetWarehouseItemList(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetWarehouseItemListAsync(ByVal strWarehouseName As String, ByVal strAPP_ID As String)
            Me.GetWarehouseItemListAsync(strWarehouseName, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetWarehouseItemListAsync(ByVal strWarehouseName As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetWarehouseItemListOperationCompleted Is Nothing) Then
                Me.GetWarehouseItemListOperationCompleted = AddressOf Me.OnGetWarehouseItemListOperationCompleted
            End If
            Me.InvokeAsync("GetWarehouseItemList", New Object() {strWarehouseName, strAPP_ID}, Me.GetWarehouseItemListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetWarehouseItemListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetWarehouseItemListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetWarehouseItemListCompleted(Me, New GetWarehouseItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMovementItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMovementItem(ByVal strItemNo As String, ByVal dtStartDate As String, ByVal dtEndDate As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMovementItem", New Object() {strItemNo, dtStartDate, dtEndDate, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMovementItem(ByVal strItemNo As String, ByVal dtStartDate As String, ByVal dtEndDate As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMovementItem", New Object() {strItemNo, dtStartDate, dtEndDate, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMovementItem(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMovementItemAsync(ByVal strItemNo As String, ByVal dtStartDate As String, ByVal dtEndDate As String, ByVal strAPP_ID As String)
            Me.GetMovementItemAsync(strItemNo, dtStartDate, dtEndDate, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMovementItemAsync(ByVal strItemNo As String, ByVal dtStartDate As String, ByVal dtEndDate As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMovementItemOperationCompleted Is Nothing) Then
                Me.GetMovementItemOperationCompleted = AddressOf Me.OnGetMovementItemOperationCompleted
            End If
            Me.InvokeAsync("GetMovementItem", New Object() {strItemNo, dtStartDate, dtEndDate, strAPP_ID}, Me.GetMovementItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMovementItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMovementItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMovementItemCompleted(Me, New GetMovementItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdjHeader", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAdjHeader(ByVal strAdjId As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAdjHeader", New Object() {strAdjId, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAdjHeader(ByVal strAdjId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAdjHeader", New Object() {strAdjId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAdjHeader(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAdjHeaderAsync(ByVal strAdjId As String, ByVal strAPP_ID As String)
            Me.GetAdjHeaderAsync(strAdjId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAdjHeaderAsync(ByVal strAdjId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetAdjHeaderOperationCompleted Is Nothing) Then
                Me.GetAdjHeaderOperationCompleted = AddressOf Me.OnGetAdjHeaderOperationCompleted
            End If
            Me.InvokeAsync("GetAdjHeader", New Object() {strAdjId, strAPP_ID}, Me.GetAdjHeaderOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAdjHeaderOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAdjHeaderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAdjHeaderCompleted(Me, New GetAdjHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdjDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAdjDetail(ByVal strAdjId As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAdjDetail", New Object() {strAdjId, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAdjDetail(ByVal strAdjId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAdjDetail", New Object() {strAdjId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAdjDetail(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAdjDetailAsync(ByVal strAdjId As String, ByVal strAPP_ID As String)
            Me.GetAdjDetailAsync(strAdjId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAdjDetailAsync(ByVal strAdjId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetAdjDetailOperationCompleted Is Nothing) Then
                Me.GetAdjDetailOperationCompleted = AddressOf Me.OnGetAdjDetailOperationCompleted
            End If
            Me.InvokeAsync("GetAdjDetail", New Object() {strAdjId, strAPP_ID}, Me.GetAdjDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAdjDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAdjDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAdjDetailCompleted(Me, New GetAdjDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMoveHeader", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMoveHeader(ByVal strMovId As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMoveHeader", New Object() {strMovId, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMoveHeader(ByVal strMovId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMoveHeader", New Object() {strMovId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMoveHeader(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMoveHeaderAsync(ByVal strMovId As String, ByVal strAPP_ID As String)
            Me.GetMoveHeaderAsync(strMovId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMoveHeaderAsync(ByVal strMovId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMoveHeaderOperationCompleted Is Nothing) Then
                Me.GetMoveHeaderOperationCompleted = AddressOf Me.OnGetMoveHeaderOperationCompleted
            End If
            Me.InvokeAsync("GetMoveHeader", New Object() {strMovId, strAPP_ID}, Me.GetMoveHeaderOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMoveHeaderOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMoveHeaderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMoveHeaderCompleted(Me, New GetMoveHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMoveDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMoveDetail(ByVal strMovId As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMoveDetail", New Object() {strMovId, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMoveDetail(ByVal strMovId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMoveDetail", New Object() {strMovId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMoveDetail(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMoveDetailAsync(ByVal strMovId As String, ByVal strAPP_ID As String)
            Me.GetMoveDetailAsync(strMovId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMoveDetailAsync(ByVal strMovId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMoveDetailOperationCompleted Is Nothing) Then
                Me.GetMoveDetailOperationCompleted = AddressOf Me.OnGetMoveDetailOperationCompleted
            End If
            Me.InvokeAsync("GetMoveDetail", New Object() {strMovId, strAPP_ID}, Me.GetMoveDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMoveDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMoveDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMoveDetailCompleted(Me, New GetMoveDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStockItem(ByVal strItemNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetStockItem", New Object() {strItemNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetStockItem(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetStockItem", New Object() {strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetStockItem(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStockItemAsync(ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetStockItemAsync(strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStockItemAsync(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetStockItemOperationCompleted Is Nothing) Then
                Me.GetStockItemOperationCompleted = AddressOf Me.OnGetStockItemOperationCompleted
            End If
            Me.InvokeAsync("GetStockItem", New Object() {strItemNo, strAPP_ID}, Me.GetStockItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStockItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStockItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStockItemCompleted(Me, New GetStockItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockQTY", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStockQTY(ByVal strItemNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetStockQTY", New Object() {strItemNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetStockQTY(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetStockQTY", New Object() {strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetStockQTY(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStockQTYAsync(ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetStockQTYAsync(strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStockQTYAsync(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetStockQTYOperationCompleted Is Nothing) Then
                Me.GetStockQTYOperationCompleted = AddressOf Me.OnGetStockQTYOperationCompleted
            End If
            Me.InvokeAsync("GetStockQTY", New Object() {strItemNo, strAPP_ID}, Me.GetStockQTYOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStockQTYOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStockQTYCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStockQTYCompleted(Me, New GetStockQTYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStock", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStock(ByVal strItemNo As String, ByVal strWarehouseId As String, ByVal strDefaultValue As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetStock", New Object() {strItemNo, strWarehouseId, strDefaultValue, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetStock(ByVal strItemNo As String, ByVal strWarehouseId As String, ByVal strDefaultValue As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetStock", New Object() {strItemNo, strWarehouseId, strDefaultValue, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetStock(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStockAsync(ByVal strItemNo As String, ByVal strWarehouseId As String, ByVal strDefaultValue As String, ByVal strAPP_ID As String)
            Me.GetStockAsync(strItemNo, strWarehouseId, strDefaultValue, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStockAsync(ByVal strItemNo As String, ByVal strWarehouseId As String, ByVal strDefaultValue As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetStockOperationCompleted Is Nothing) Then
                Me.GetStockOperationCompleted = AddressOf Me.OnGetStockOperationCompleted
            End If
            Me.InvokeAsync("GetStock", New Object() {strItemNo, strWarehouseId, strDefaultValue, strAPP_ID}, Me.GetStockOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStockOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStockCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStockCompleted(Me, New GetStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockLOV", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStockLOV(ByVal strWarehouseId As String, ByVal strDefaultValue As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetStockLOV", New Object() {strWarehouseId, strDefaultValue, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetStockLOV(ByVal strWarehouseId As String, ByVal strDefaultValue As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetStockLOV", New Object() {strWarehouseId, strDefaultValue, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetStockLOV(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStockLOVAsync(ByVal strWarehouseId As String, ByVal strDefaultValue As String, ByVal strAPP_ID As String)
            Me.GetStockLOVAsync(strWarehouseId, strDefaultValue, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStockLOVAsync(ByVal strWarehouseId As String, ByVal strDefaultValue As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetStockLOVOperationCompleted Is Nothing) Then
                Me.GetStockLOVOperationCompleted = AddressOf Me.OnGetStockLOVOperationCompleted
            End If
            Me.InvokeAsync("GetStockLOV", New Object() {strWarehouseId, strDefaultValue, strAPP_ID}, Me.GetStockLOVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStockLOVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStockLOVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStockLOVCompleted(Me, New GetStockLOVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockListLOV", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStockListLOV(ByVal strDefaultValue As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetStockListLOV", New Object() {strDefaultValue, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetStockListLOV(ByVal strDefaultValue As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetStockListLOV", New Object() {strDefaultValue, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetStockListLOV(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStockListLOVAsync(ByVal strDefaultValue As String, ByVal strAPP_ID As String)
            Me.GetStockListLOVAsync(strDefaultValue, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStockListLOVAsync(ByVal strDefaultValue As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetStockListLOVOperationCompleted Is Nothing) Then
                Me.GetStockListLOVOperationCompleted = AddressOf Me.OnGetStockListLOVOperationCompleted
            End If
            Me.InvokeAsync("GetStockListLOV", New Object() {strDefaultValue, strAPP_ID}, Me.GetStockListLOVOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStockListLOVOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStockListLOVCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStockListLOVCompleted(Me, New GetStockListLOVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxMovId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMaxMovId(ByVal dtMovDate As Date, ByVal strItemNo As String, ByVal strAPP_ID As String) As Integer
            Dim results() As Object = Me.Invoke("GetMaxMovId", New Object() {dtMovDate, strItemNo, strAPP_ID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMaxMovId(ByVal dtMovDate As Date, ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMaxMovId", New Object() {dtMovDate, strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMaxMovId(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMaxMovIdAsync(ByVal dtMovDate As Date, ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetMaxMovIdAsync(dtMovDate, strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMaxMovIdAsync(ByVal dtMovDate As Date, ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMaxMovIdOperationCompleted Is Nothing) Then
                Me.GetMaxMovIdOperationCompleted = AddressOf Me.OnGetMaxMovIdOperationCompleted
            End If
            Me.InvokeAsync("GetMaxMovId", New Object() {dtMovDate, strItemNo, strAPP_ID}, Me.GetMaxMovIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMaxMovIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMaxMovIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMaxMovIdCompleted(Me, New GetMaxMovIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMaxAdjId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMaxAdjId(ByVal dtMovDate As Date, ByVal strItemNo As String, ByVal strAPP_ID As String) As Integer
            Dim results() As Object = Me.Invoke("GetMaxAdjId", New Object() {dtMovDate, strItemNo, strAPP_ID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMaxAdjId(ByVal dtMovDate As Date, ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMaxAdjId", New Object() {dtMovDate, strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMaxAdjId(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMaxAdjIdAsync(ByVal dtMovDate As Date, ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetMaxAdjIdAsync(dtMovDate, strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMaxAdjIdAsync(ByVal dtMovDate As Date, ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMaxAdjIdOperationCompleted Is Nothing) Then
                Me.GetMaxAdjIdOperationCompleted = AddressOf Me.OnGetMaxAdjIdOperationCompleted
            End If
            Me.InvokeAsync("GetMaxAdjId", New Object() {dtMovDate, strItemNo, strAPP_ID}, Me.GetMaxAdjIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMaxAdjIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMaxAdjIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMaxAdjIdCompleted(Me, New GetMaxAdjIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddMoveItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddMoveItem(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("AddMoveItem", New Object() {adoDSHeader, adoDSDetail, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddMoveItem(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddMoveItem", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddMoveItem(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddMoveItemAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.AddMoveItemAsync(adoDSHeader, adoDSDetail, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddMoveItemAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.AddMoveItemOperationCompleted Is Nothing) Then
                Me.AddMoveItemOperationCompleted = AddressOf Me.OnAddMoveItemOperationCompleted
            End If
            Me.InvokeAsync("AddMoveItem", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, Me.AddMoveItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddMoveItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddMoveItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddMoveItemCompleted(Me, New AddMoveItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAdjustment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateAdjustment(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.Invoke("UpdateAdjustment", New Object() {adoDSHeader, adoDSDetail, strAPP_ID})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdateAdjustment(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateAdjustment", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdateAdjustment(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateAdjustmentAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.UpdateAdjustmentAsync(adoDSHeader, adoDSDetail, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateAdjustmentAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.UpdateAdjustmentOperationCompleted Is Nothing) Then
                Me.UpdateAdjustmentOperationCompleted = AddressOf Me.OnUpdateAdjustmentOperationCompleted
            End If
            Me.InvokeAsync("UpdateAdjustment", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, Me.UpdateAdjustmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateAdjustmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateAdjustmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateAdjustmentCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMovement", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateMovement(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.Invoke("UpdateMovement", New Object() {adoDSHeader, adoDSDetail, strAPP_ID})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdateMovement(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateMovement", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdateMovement(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMovementAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.UpdateMovementAsync(adoDSHeader, adoDSDetail, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMovementAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.UpdateMovementOperationCompleted Is Nothing) Then
                Me.UpdateMovementOperationCompleted = AddressOf Me.OnUpdateMovementOperationCompleted
            End If
            Me.InvokeAsync("UpdateMovement", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, Me.UpdateMovementOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateMovementOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateMovementCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateMovementCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdjustment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAdjustment(ByVal intAdjId As Integer, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAdjustment", New Object() {intAdjId, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAdjustment(ByVal intAdjId As Integer, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAdjustment", New Object() {intAdjId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAdjustment(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAdjustmentAsync(ByVal intAdjId As Integer, ByVal strAPP_ID As String)
            Me.GetAdjustmentAsync(intAdjId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAdjustmentAsync(ByVal intAdjId As Integer, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetAdjustmentOperationCompleted Is Nothing) Then
                Me.GetAdjustmentOperationCompleted = AddressOf Me.OnGetAdjustmentOperationCompleted
            End If
            Me.InvokeAsync("GetAdjustment", New Object() {intAdjId, strAPP_ID}, Me.GetAdjustmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAdjustmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAdjustmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAdjustmentCompleted(Me, New GetAdjustmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMovement", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMovement(ByVal intMovId As Integer, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMovement", New Object() {intMovId, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMovement(ByVal intMovId As Integer, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMovement", New Object() {intMovId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMovement(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMovementAsync(ByVal intMovId As Integer, ByVal strAPP_ID As String)
            Me.GetMovementAsync(intMovId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMovementAsync(ByVal intMovId As Integer, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMovementOperationCompleted Is Nothing) Then
                Me.GetMovementOperationCompleted = AddressOf Me.OnGetMovementOperationCompleted
            End If
            Me.InvokeAsync("GetMovement", New Object() {intMovId, strAPP_ID}, Me.GetMovementOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMovementOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMovementCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMovementCompleted(Me, New GetMovementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAdjustStock", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddAdjustStock(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("AddAdjustStock", New Object() {adoDSHeader, adoDSDetail, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddAdjustStock(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddAdjustStock", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddAdjustStock(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddAdjustStockAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.AddAdjustStockAsync(adoDSHeader, adoDSDetail, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddAdjustStockAsync(ByVal adoDSHeader As System.Data.DataSet, ByVal adoDSDetail As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.AddAdjustStockOperationCompleted Is Nothing) Then
                Me.AddAdjustStockOperationCompleted = AddressOf Me.OnAddAdjustStockOperationCompleted
            End If
            Me.InvokeAsync("AddAdjustStock", New Object() {adoDSHeader, adoDSDetail, strAPP_ID}, Me.AddAdjustStockOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddAdjustStockOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddAdjustStockCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddAdjustStockCompleted(Me, New AddAdjustStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdjustmentItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAdjustmentItem(ByVal strItemNo As String, ByVal dtStartDate As String, ByVal dtEndDate As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAdjustmentItem", New Object() {strItemNo, dtStartDate, dtEndDate, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAdjustmentItem(ByVal strItemNo As String, ByVal dtStartDate As String, ByVal dtEndDate As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAdjustmentItem", New Object() {strItemNo, dtStartDate, dtEndDate, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAdjustmentItem(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAdjustmentItemAsync(ByVal strItemNo As String, ByVal dtStartDate As String, ByVal dtEndDate As String, ByVal strAPP_ID As String)
            Me.GetAdjustmentItemAsync(strItemNo, dtStartDate, dtEndDate, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAdjustmentItemAsync(ByVal strItemNo As String, ByVal dtStartDate As String, ByVal dtEndDate As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetAdjustmentItemOperationCompleted Is Nothing) Then
                Me.GetAdjustmentItemOperationCompleted = AddressOf Me.OnGetAdjustmentItemOperationCompleted
            End If
            Me.InvokeAsync("GetAdjustmentItem", New Object() {strItemNo, dtStartDate, dtEndDate, strAPP_ID}, Me.GetAdjustmentItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAdjustmentItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAdjustmentItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAdjustmentItemCompleted(Me, New GetAdjustmentItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPOReportSummary", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPOReportSummary(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPOReportSummary", New Object() {dtStart, dtEnd, strApp_id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPOReportSummary(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPOReportSummary", New Object() {dtStart, dtEnd, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPOReportSummary(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPOReportSummaryAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String)
            Me.GetPOReportSummaryAsync(dtStart, dtEnd, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPOReportSummaryAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.GetPOReportSummaryOperationCompleted Is Nothing) Then
                Me.GetPOReportSummaryOperationCompleted = AddressOf Me.OnGetPOReportSummaryOperationCompleted
            End If
            Me.InvokeAsync("GetPOReportSummary", New Object() {dtStart, dtEnd, strApp_id}, Me.GetPOReportSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPOReportSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPOReportSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPOReportSummaryCompleted(Me, New GetPOReportSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPOReportDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPOReportDetail(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPOReportDetail", New Object() {dtStart, dtEnd, strApp_id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPOReportDetail(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPOReportDetail", New Object() {dtStart, dtEnd, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPOReportDetail(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPOReportDetailAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String)
            Me.GetPOReportDetailAsync(dtStart, dtEnd, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPOReportDetailAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.GetPOReportDetailOperationCompleted Is Nothing) Then
                Me.GetPOReportDetailOperationCompleted = AddressOf Me.OnGetPOReportDetailOperationCompleted
            End If
            Me.InvokeAsync("GetPOReportDetail", New Object() {dtStart, dtEnd, strApp_id}, Me.GetPOReportDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPOReportDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPOReportDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPOReportDetailCompleted(Me, New GetPOReportDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecivedPOSummary", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRecivedPOSummary(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRecivedPOSummary", New Object() {dtStart, dtEnd, strApp_id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRecivedPOSummary(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRecivedPOSummary", New Object() {dtStart, dtEnd, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRecivedPOSummary(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRecivedPOSummaryAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String)
            Me.GetRecivedPOSummaryAsync(dtStart, dtEnd, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRecivedPOSummaryAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.GetRecivedPOSummaryOperationCompleted Is Nothing) Then
                Me.GetRecivedPOSummaryOperationCompleted = AddressOf Me.OnGetRecivedPOSummaryOperationCompleted
            End If
            Me.InvokeAsync("GetRecivedPOSummary", New Object() {dtStart, dtEnd, strApp_id}, Me.GetRecivedPOSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRecivedPOSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRecivedPOSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRecivedPOSummaryCompleted(Me, New GetRecivedPOSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecivedPODetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRecivedPODetail(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRecivedPODetail", New Object() {dtStart, dtEnd, strApp_id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRecivedPODetail(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRecivedPODetail", New Object() {dtStart, dtEnd, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRecivedPODetail(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRecivedPODetailAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String)
            Me.GetRecivedPODetailAsync(dtStart, dtEnd, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRecivedPODetailAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.GetRecivedPODetailOperationCompleted Is Nothing) Then
                Me.GetRecivedPODetailOperationCompleted = AddressOf Me.OnGetRecivedPODetailOperationCompleted
            End If
            Me.InvokeAsync("GetRecivedPODetail", New Object() {dtStart, dtEnd, strApp_id}, Me.GetRecivedPODetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRecivedPODetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRecivedPODetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRecivedPODetailCompleted(Me, New GetRecivedPODetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMovementSummary", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMovementSummary(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMovementSummary", New Object() {dtStart, dtEnd, strApp_id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMovementSummary(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMovementSummary", New Object() {dtStart, dtEnd, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMovementSummary(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMovementSummaryAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String)
            Me.GetMovementSummaryAsync(dtStart, dtEnd, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMovementSummaryAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.GetMovementSummaryOperationCompleted Is Nothing) Then
                Me.GetMovementSummaryOperationCompleted = AddressOf Me.OnGetMovementSummaryOperationCompleted
            End If
            Me.InvokeAsync("GetMovementSummary", New Object() {dtStart, dtEnd, strApp_id}, Me.GetMovementSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMovementSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMovementSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMovementSummaryCompleted(Me, New GetMovementSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMovementDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMovementDetail(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMovementDetail", New Object() {dtStart, dtEnd, strApp_id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMovementDetail(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMovementDetail", New Object() {dtStart, dtEnd, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMovementDetail(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMovementDetailAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String)
            Me.GetMovementDetailAsync(dtStart, dtEnd, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMovementDetailAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.GetMovementDetailOperationCompleted Is Nothing) Then
                Me.GetMovementDetailOperationCompleted = AddressOf Me.OnGetMovementDetailOperationCompleted
            End If
            Me.InvokeAsync("GetMovementDetail", New Object() {dtStart, dtEnd, strApp_id}, Me.GetMovementDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMovementDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMovementDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMovementDetailCompleted(Me, New GetMovementDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdjustmentSummary", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAdjustmentSummary(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAdjustmentSummary", New Object() {dtStart, dtEnd, strApp_id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAdjustmentSummary(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAdjustmentSummary", New Object() {dtStart, dtEnd, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAdjustmentSummary(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAdjustmentSummaryAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String)
            Me.GetAdjustmentSummaryAsync(dtStart, dtEnd, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAdjustmentSummaryAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.GetAdjustmentSummaryOperationCompleted Is Nothing) Then
                Me.GetAdjustmentSummaryOperationCompleted = AddressOf Me.OnGetAdjustmentSummaryOperationCompleted
            End If
            Me.InvokeAsync("GetAdjustmentSummary", New Object() {dtStart, dtEnd, strApp_id}, Me.GetAdjustmentSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAdjustmentSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAdjustmentSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAdjustmentSummaryCompleted(Me, New GetAdjustmentSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdjustmentDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAdjustmentDetail(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetAdjustmentDetail", New Object() {dtStart, dtEnd, strApp_id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetAdjustmentDetail(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAdjustmentDetail", New Object() {dtStart, dtEnd, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAdjustmentDetail(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAdjustmentDetailAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String)
            Me.GetAdjustmentDetailAsync(dtStart, dtEnd, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAdjustmentDetailAsync(ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.GetAdjustmentDetailOperationCompleted Is Nothing) Then
                Me.GetAdjustmentDetailOperationCompleted = AddressOf Me.OnGetAdjustmentDetailOperationCompleted
            End If
            Me.InvokeAsync("GetAdjustmentDetail", New Object() {dtStart, dtEnd, strApp_id}, Me.GetAdjustmentDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAdjustmentDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAdjustmentDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAdjustmentDetailCompleted(Me, New GetAdjustmentDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRptRecieveItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRptRecieveItem(ByVal strItemNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRptRecieveItem", New Object() {strItemNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRptRecieveItem(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRptRecieveItem", New Object() {strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRptRecieveItem(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRptRecieveItemAsync(ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetRptRecieveItemAsync(strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRptRecieveItemAsync(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetRptRecieveItemOperationCompleted Is Nothing) Then
                Me.GetRptRecieveItemOperationCompleted = AddressOf Me.OnGetRptRecieveItemOperationCompleted
            End If
            Me.InvokeAsync("GetRptRecieveItem", New Object() {strItemNo, strAPP_ID}, Me.GetRptRecieveItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRptRecieveItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRptRecieveItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRptRecieveItemCompleted(Me, New GetRptRecieveItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRptMoveItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRptMoveItem(ByVal strItemNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRptMoveItem", New Object() {strItemNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRptMoveItem(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRptMoveItem", New Object() {strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRptMoveItem(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRptMoveItemAsync(ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetRptMoveItemAsync(strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRptMoveItemAsync(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetRptMoveItemOperationCompleted Is Nothing) Then
                Me.GetRptMoveItemOperationCompleted = AddressOf Me.OnGetRptMoveItemOperationCompleted
            End If
            Me.InvokeAsync("GetRptMoveItem", New Object() {strItemNo, strAPP_ID}, Me.GetRptMoveItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRptMoveItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRptMoveItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRptMoveItemCompleted(Me, New GetRptMoveItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRptAdjustItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRptAdjustItem(ByVal strItemNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRptAdjustItem", New Object() {strItemNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRptAdjustItem(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRptAdjustItem", New Object() {strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRptAdjustItem(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRptAdjustItemAsync(ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetRptAdjustItemAsync(strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRptAdjustItemAsync(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetRptAdjustItemOperationCompleted Is Nothing) Then
                Me.GetRptAdjustItemOperationCompleted = AddressOf Me.OnGetRptAdjustItemOperationCompleted
            End If
            Me.InvokeAsync("GetRptAdjustItem", New Object() {strItemNo, strAPP_ID}, Me.GetRptAdjustItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRptAdjustItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRptAdjustItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRptAdjustItemCompleted(Me, New GetRptAdjustItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRptPriceItem", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRptPriceItem(ByVal strItemNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRptPriceItem", New Object() {strItemNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRptPriceItem(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRptPriceItem", New Object() {strItemNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRptPriceItem(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRptPriceItemAsync(ByVal strItemNo As String, ByVal strAPP_ID As String)
            Me.GetRptPriceItemAsync(strItemNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRptPriceItemAsync(ByVal strItemNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetRptPriceItemOperationCompleted Is Nothing) Then
                Me.GetRptPriceItemOperationCompleted = AddressOf Me.OnGetRptPriceItemOperationCompleted
            End If
            Me.InvokeAsync("GetRptPriceItem", New Object() {strItemNo, strAPP_ID}, Me.GetRptPriceItemOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRptPriceItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRptPriceItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRptPriceItemCompleted(Me, New GetRptPriceItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRptRecieveQTY", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRptRecieveQTY(ByVal strItemNo As String, ByVal strPONo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetRptRecieveQTY", New Object() {strItemNo, strPONo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetRptRecieveQTY(ByVal strItemNo As String, ByVal strPONo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetRptRecieveQTY", New Object() {strItemNo, strPONo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetRptRecieveQTY(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRptRecieveQTYAsync(ByVal strItemNo As String, ByVal strPONo As String, ByVal strAPP_ID As String)
            Me.GetRptRecieveQTYAsync(strItemNo, strPONo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRptRecieveQTYAsync(ByVal strItemNo As String, ByVal strPONo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetRptRecieveQTYOperationCompleted Is Nothing) Then
                Me.GetRptRecieveQTYOperationCompleted = AddressOf Me.OnGetRptRecieveQTYOperationCompleted
            End If
            Me.InvokeAsync("GetRptRecieveQTY", New Object() {strItemNo, strPONo, strAPP_ID}, Me.GetRptRecieveQTYOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRptRecieveQTYOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRptRecieveQTYCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRptRecieveQTYCompleted(Me, New GetRptRecieveQTYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStockReport(ByVal strItemNo As String, ByVal strWarehouseId As String, ByVal strDefaultValue As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetStockReport", New Object() {strItemNo, strWarehouseId, strDefaultValue, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetStockReport(ByVal strItemNo As String, ByVal strWarehouseId As String, ByVal strDefaultValue As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetStockReport", New Object() {strItemNo, strWarehouseId, strDefaultValue, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetStockReport(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStockReportAsync(ByVal strItemNo As String, ByVal strWarehouseId As String, ByVal strDefaultValue As String, ByVal strAPP_ID As String)
            Me.GetStockReportAsync(strItemNo, strWarehouseId, strDefaultValue, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStockReportAsync(ByVal strItemNo As String, ByVal strWarehouseId As String, ByVal strDefaultValue As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetStockReportOperationCompleted Is Nothing) Then
                Me.GetStockReportOperationCompleted = AddressOf Me.OnGetStockReportOperationCompleted
            End If
            Me.InvokeAsync("GetStockReport", New Object() {strItemNo, strWarehouseId, strDefaultValue, strAPP_ID}, Me.GetStockReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStockReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStockReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStockReportCompleted(Me, New GetStockReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPOSMontlyLostProfitReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPOSMontlyLostProfitReport(ByVal dtDate As Date, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetPOSMontlyLostProfitReport", New Object() {dtDate, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetPOSMontlyLostProfitReport(ByVal dtDate As Date, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetPOSMontlyLostProfitReport", New Object() {dtDate, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetPOSMontlyLostProfitReport(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPOSMontlyLostProfitReportAsync(ByVal dtDate As Date, ByVal strAPP_ID As String)
            Me.GetPOSMontlyLostProfitReportAsync(dtDate, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPOSMontlyLostProfitReportAsync(ByVal dtDate As Date, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetPOSMontlyLostProfitReportOperationCompleted Is Nothing) Then
                Me.GetPOSMontlyLostProfitReportOperationCompleted = AddressOf Me.OnGetPOSMontlyLostProfitReportOperationCompleted
            End If
            Me.InvokeAsync("GetPOSMontlyLostProfitReport", New Object() {dtDate, strAPP_ID}, Me.GetPOSMontlyLostProfitReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPOSMontlyLostProfitReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPOSMontlyLostProfitReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPOSMontlyLostProfitReportCompleted(Me, New GetPOSMontlyLostProfitReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetROItemCompletedEventHandler(ByVal sender As Object, ByVal e As GetROItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetROItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetItemInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddNewItemCompletedEventHandler(ByVal sender As Object, ByVal e As AddNewItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddNewItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateItemInfoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteItemCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetSuppInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetSuppInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSuppInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddNewSuppCompletedEventHandler(ByVal sender As Object, ByVal e As AddNewSuppCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddNewSuppCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateSuppInfoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteSuppCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteSuppCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteSuppCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMaxPOIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetMaxPOIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMaxPOIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetPOHeadInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetPOHeadInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPOHeadInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetPODetailInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetPODetailInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPODetailInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddNewPOCompletedEventHandler(ByVal sender As Object, ByVal e As AddNewPOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddNewPOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdatePOCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeletePOCompletedEventHandler(ByVal sender As Object, ByVal e As DeletePOCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeletePOCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetSupplierLOVCompletedEventHandler(ByVal sender As Object, ByVal e As GetSupplierLOVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSupplierLOVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetItemLOVCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemLOVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemLOVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetItemStockLOVCompletedEventHandler(ByVal sender As Object, ByVal e As GetItemStockLOVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetItemStockLOVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetPOLOVCompletedEventHandler(ByVal sender As Object, ByVal e As GetPOLOVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPOLOVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetRecieveInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetRecieveInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRecieveInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetRecieveHeaderCompletedEventHandler(ByVal sender As Object, ByVal e As GetRecieveHeaderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRecieveHeaderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetRecieveDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetRecieveDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRecieveDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTotalRecieveCompletedEventHandler(ByVal sender As Object, ByVal e As GetTotalRecieveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTotalRecieveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMaxRecIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetMaxRecIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMaxRecIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddNewRecieveCompletedEventHandler(ByVal sender As Object, ByVal e As AddNewRecieveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddNewRecieveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateRecieveCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteRecieveCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteRecieveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteRecieveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetPOHeaderCompletedEventHandler(ByVal sender As Object, ByVal e As GetPOHeaderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPOHeaderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetPODetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetPODetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPODetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetSupplierListCompletedEventHandler(ByVal sender As Object, ByVal e As GetSupplierListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSupplierListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetWarehouseItemListCompletedEventHandler(ByVal sender As Object, ByVal e As GetWarehouseItemListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetWarehouseItemListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMovementItemCompletedEventHandler(ByVal sender As Object, ByVal e As GetMovementItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMovementItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAdjHeaderCompletedEventHandler(ByVal sender As Object, ByVal e As GetAdjHeaderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAdjHeaderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAdjDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetAdjDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAdjDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMoveHeaderCompletedEventHandler(ByVal sender As Object, ByVal e As GetMoveHeaderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMoveHeaderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMoveDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetMoveDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMoveDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetStockItemCompletedEventHandler(ByVal sender As Object, ByVal e As GetStockItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStockItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetStockQTYCompletedEventHandler(ByVal sender As Object, ByVal e As GetStockQTYCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStockQTYCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetStockCompletedEventHandler(ByVal sender As Object, ByVal e As GetStockCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStockCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetStockLOVCompletedEventHandler(ByVal sender As Object, ByVal e As GetStockLOVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStockLOVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetStockListLOVCompletedEventHandler(ByVal sender As Object, ByVal e As GetStockListLOVCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStockListLOVCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMaxMovIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetMaxMovIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMaxMovIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMaxAdjIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetMaxAdjIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMaxAdjIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddMoveItemCompletedEventHandler(ByVal sender As Object, ByVal e As AddMoveItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddMoveItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateAdjustmentCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateMovementCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAdjustmentCompletedEventHandler(ByVal sender As Object, ByVal e As GetAdjustmentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAdjustmentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMovementCompletedEventHandler(ByVal sender As Object, ByVal e As GetMovementCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMovementCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddAdjustStockCompletedEventHandler(ByVal sender As Object, ByVal e As AddAdjustStockCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddAdjustStockCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAdjustmentItemCompletedEventHandler(ByVal sender As Object, ByVal e As GetAdjustmentItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAdjustmentItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetPOReportSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetPOReportSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPOReportSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetPOReportDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetPOReportDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPOReportDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetRecivedPOSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetRecivedPOSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRecivedPOSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetRecivedPODetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetRecivedPODetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRecivedPODetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMovementSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetMovementSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMovementSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMovementDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetMovementDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMovementDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAdjustmentSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetAdjustmentSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAdjustmentSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetAdjustmentDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetAdjustmentDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAdjustmentDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetRptRecieveItemCompletedEventHandler(ByVal sender As Object, ByVal e As GetRptRecieveItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRptRecieveItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetRptMoveItemCompletedEventHandler(ByVal sender As Object, ByVal e As GetRptMoveItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRptMoveItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetRptAdjustItemCompletedEventHandler(ByVal sender As Object, ByVal e As GetRptAdjustItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRptAdjustItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetRptPriceItemCompletedEventHandler(ByVal sender As Object, ByVal e As GetRptPriceItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRptPriceItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetRptRecieveQTYCompletedEventHandler(ByVal sender As Object, ByVal e As GetRptRecieveQTYCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRptRecieveQTYCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetStockReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetStockReportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStockReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetPOSMontlyLostProfitReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetPOSMontlyLostProfitReportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPOSMontlyLostProfitReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
