'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace SystemSecurity
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="svcSystemSecuritySoap", [Namespace]:="http://tempuri.org/KatalaWebservices")>  _
    Partial Public Class svcSystemSecurity
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetUserAccessReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateUserAccessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserAccessInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUserAccessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddNewProgramAccessToUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateUserInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddNewUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserAccessValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LogonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserAccessRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ChangePasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private syseventprocedureOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/KatalaWebServices/svcSystemSecurity.Asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetUserAccessReportCompleted As GetUserAccessReportCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateUserAccessCompleted As UpdateUserAccessCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserAccessInfoCompleted As GetUserAccessInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUserAccessCompleted As DeleteUserAccessCompletedEventHandler
        
        '''<remarks/>
        Public Event AddNewProgramAccessToUserCompleted As AddNewProgramAccessToUserCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateUserInfoCompleted As UpdateUserInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserInfoCompleted As GetUserInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteUserCompleted As DeleteUserCompletedEventHandler
        
        '''<remarks/>
        Public Event AddNewUserCompleted As AddNewUserCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserListCompleted As GetUserListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserAccessValueCompleted As GetUserAccessValueCompletedEventHandler
        
        '''<remarks/>
        Public Event LogonCompleted As LogonCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserAccessRecordCompleted As GetUserAccessRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event ChangePasswordCompleted As ChangePasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event syseventprocedureCompleted As syseventprocedureCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/GetUserAccessReport", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserAccessReport(ByVal strUserId As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUserAccessReport", New Object() {strUserId, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetUserAccessReport(ByVal strUserId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUserAccessReport", New Object() {strUserId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetUserAccessReport(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserAccessReportAsync(ByVal strUserId As String, ByVal strAPP_ID As String)
            Me.GetUserAccessReportAsync(strUserId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserAccessReportAsync(ByVal strUserId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetUserAccessReportOperationCompleted Is Nothing) Then
                Me.GetUserAccessReportOperationCompleted = AddressOf Me.OnGetUserAccessReportOperationCompleted
            End If
            Me.InvokeAsync("GetUserAccessReport", New Object() {strUserId, strAPP_ID}, Me.GetUserAccessReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserAccessReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserAccessReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserAccessReportCompleted(Me, New GetUserAccessReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/UpdateUserAccess", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateUserAccess(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.Invoke("UpdateUserAccess", New Object() {adoDS, strAPP_ID})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdateUserAccess(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateUserAccess", New Object() {adoDS, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdateUserAccess(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAccessAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.UpdateUserAccessAsync(adoDS, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserAccessAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.UpdateUserAccessOperationCompleted Is Nothing) Then
                Me.UpdateUserAccessOperationCompleted = AddressOf Me.OnUpdateUserAccessOperationCompleted
            End If
            Me.InvokeAsync("UpdateUserAccess", New Object() {adoDS, strAPP_ID}, Me.UpdateUserAccessOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateUserAccessOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateUserAccessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateUserAccessCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/GetUserAccessInfo", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserAccessInfo(ByVal strUserId As String, ByVal strProgramId As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUserAccessInfo", New Object() {strUserId, strProgramId, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetUserAccessInfo(ByVal strUserId As String, ByVal strProgramId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUserAccessInfo", New Object() {strUserId, strProgramId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetUserAccessInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserAccessInfoAsync(ByVal strUserId As String, ByVal strProgramId As String, ByVal strAPP_ID As String)
            Me.GetUserAccessInfoAsync(strUserId, strProgramId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserAccessInfoAsync(ByVal strUserId As String, ByVal strProgramId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetUserAccessInfoOperationCompleted Is Nothing) Then
                Me.GetUserAccessInfoOperationCompleted = AddressOf Me.OnGetUserAccessInfoOperationCompleted
            End If
            Me.InvokeAsync("GetUserAccessInfo", New Object() {strUserId, strProgramId, strAPP_ID}, Me.GetUserAccessInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserAccessInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserAccessInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserAccessInfoCompleted(Me, New GetUserAccessInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/DeleteUserAccess", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteUserAccess(ByVal strUserId As String, ByVal strProgramId As String, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("DeleteUserAccess", New Object() {strUserId, strProgramId, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteUserAccess(ByVal strUserId As String, ByVal strProgramId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteUserAccess", New Object() {strUserId, strProgramId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteUserAccess(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAccessAsync(ByVal strUserId As String, ByVal strProgramId As String, ByVal strAPP_ID As String)
            Me.DeleteUserAccessAsync(strUserId, strProgramId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAccessAsync(ByVal strUserId As String, ByVal strProgramId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.DeleteUserAccessOperationCompleted Is Nothing) Then
                Me.DeleteUserAccessOperationCompleted = AddressOf Me.OnDeleteUserAccessOperationCompleted
            End If
            Me.InvokeAsync("DeleteUserAccess", New Object() {strUserId, strProgramId, strAPP_ID}, Me.DeleteUserAccessOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUserAccessOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUserAccessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUserAccessCompleted(Me, New DeleteUserAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/AddNewProgramAccessToUser", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddNewProgramAccessToUser(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("AddNewProgramAccessToUser", New Object() {adoDS, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddNewProgramAccessToUser(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddNewProgramAccessToUser", New Object() {adoDS, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddNewProgramAccessToUser(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddNewProgramAccessToUserAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.AddNewProgramAccessToUserAsync(adoDS, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddNewProgramAccessToUserAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.AddNewProgramAccessToUserOperationCompleted Is Nothing) Then
                Me.AddNewProgramAccessToUserOperationCompleted = AddressOf Me.OnAddNewProgramAccessToUserOperationCompleted
            End If
            Me.InvokeAsync("AddNewProgramAccessToUser", New Object() {adoDS, strAPP_ID}, Me.AddNewProgramAccessToUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddNewProgramAccessToUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddNewProgramAccessToUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddNewProgramAccessToUserCompleted(Me, New AddNewProgramAccessToUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/UpdateUserInfo", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateUserInfo(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.Invoke("UpdateUserInfo", New Object() {adoDS, strAPP_ID})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdateUserInfo(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateUserInfo", New Object() {adoDS, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdateUserInfo(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserInfoAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.UpdateUserInfoAsync(adoDS, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateUserInfoAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.UpdateUserInfoOperationCompleted Is Nothing) Then
                Me.UpdateUserInfoOperationCompleted = AddressOf Me.OnUpdateUserInfoOperationCompleted
            End If
            Me.InvokeAsync("UpdateUserInfo", New Object() {adoDS, strAPP_ID}, Me.UpdateUserInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateUserInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateUserInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateUserInfoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/GetUserInfo", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserInfo(ByVal strUserId As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUserInfo", New Object() {strUserId, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetUserInfo(ByVal strUserId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUserInfo", New Object() {strUserId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetUserInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserInfoAsync(ByVal strUserId As String, ByVal strAPP_ID As String)
            Me.GetUserInfoAsync(strUserId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserInfoAsync(ByVal strUserId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetUserInfoOperationCompleted Is Nothing) Then
                Me.GetUserInfoOperationCompleted = AddressOf Me.OnGetUserInfoOperationCompleted
            End If
            Me.InvokeAsync("GetUserInfo", New Object() {strUserId, strAPP_ID}, Me.GetUserInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserInfoCompleted(Me, New GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/DeleteUser", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteUser(ByVal strUserId As String, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("DeleteUser", New Object() {strUserId, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteUser(ByVal strUserId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteUser", New Object() {strUserId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteUser(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAsync(ByVal strUserId As String, ByVal strAPP_ID As String)
            Me.DeleteUserAsync(strUserId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteUserAsync(ByVal strUserId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.DeleteUserOperationCompleted Is Nothing) Then
                Me.DeleteUserOperationCompleted = AddressOf Me.OnDeleteUserOperationCompleted
            End If
            Me.InvokeAsync("DeleteUser", New Object() {strUserId, strAPP_ID}, Me.DeleteUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteUserCompleted(Me, New DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/AddNewUser", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddNewUser(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("AddNewUser", New Object() {adoDS, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddNewUser(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddNewUser", New Object() {adoDS, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddNewUser(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddNewUserAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.AddNewUserAsync(adoDS, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddNewUserAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.AddNewUserOperationCompleted Is Nothing) Then
                Me.AddNewUserOperationCompleted = AddressOf Me.OnAddNewUserOperationCompleted
            End If
            Me.InvokeAsync("AddNewUser", New Object() {adoDS, strAPP_ID}, Me.AddNewUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddNewUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddNewUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddNewUserCompleted(Me, New AddNewUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/GetUserList", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserList(ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUserList", New Object() {strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetUserList(ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUserList", New Object() {strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetUserList(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserListAsync(ByVal strAPP_ID As String)
            Me.GetUserListAsync(strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserListAsync(ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetUserListOperationCompleted Is Nothing) Then
                Me.GetUserListOperationCompleted = AddressOf Me.OnGetUserListOperationCompleted
            End If
            Me.InvokeAsync("GetUserList", New Object() {strAPP_ID}, Me.GetUserListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserListCompleted(Me, New GetUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/GetUserAccessValue", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserAccessValue(ByVal strUserId As String, ByVal strProgramId As String, ByVal strAPP_ID As String) As Integer
            Dim results() As Object = Me.Invoke("GetUserAccessValue", New Object() {strUserId, strProgramId, strAPP_ID})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginGetUserAccessValue(ByVal strUserId As String, ByVal strProgramId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUserAccessValue", New Object() {strUserId, strProgramId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetUserAccessValue(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserAccessValueAsync(ByVal strUserId As String, ByVal strProgramId As String, ByVal strAPP_ID As String)
            Me.GetUserAccessValueAsync(strUserId, strProgramId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserAccessValueAsync(ByVal strUserId As String, ByVal strProgramId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetUserAccessValueOperationCompleted Is Nothing) Then
                Me.GetUserAccessValueOperationCompleted = AddressOf Me.OnGetUserAccessValueOperationCompleted
            End If
            Me.InvokeAsync("GetUserAccessValue", New Object() {strUserId, strProgramId, strAPP_ID}, Me.GetUserAccessValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserAccessValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserAccessValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserAccessValueCompleted(Me, New GetUserAccessValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/Logon", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Logon(ByVal strUserId As String, ByVal strPassword As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Logon", New Object() {strUserId, strPassword, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginLogon(ByVal strUserId As String, ByVal strPassword As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Logon", New Object() {strUserId, strPassword, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndLogon(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LogonAsync(ByVal strUserId As String, ByVal strPassword As String, ByVal strAPP_ID As String)
            Me.LogonAsync(strUserId, strPassword, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogonAsync(ByVal strUserId As String, ByVal strPassword As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.LogonOperationCompleted Is Nothing) Then
                Me.LogonOperationCompleted = AddressOf Me.OnLogonOperationCompleted
            End If
            Me.InvokeAsync("Logon", New Object() {strUserId, strPassword, strAPP_ID}, Me.LogonOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogonOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogonCompleted(Me, New LogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/GetUserAccessRecord", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserAccessRecord(ByVal strUserId As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUserAccessRecord", New Object() {strUserId, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetUserAccessRecord(ByVal strUserId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUserAccessRecord", New Object() {strUserId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetUserAccessRecord(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserAccessRecordAsync(ByVal strUserId As String, ByVal strAPP_ID As String)
            Me.GetUserAccessRecordAsync(strUserId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserAccessRecordAsync(ByVal strUserId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetUserAccessRecordOperationCompleted Is Nothing) Then
                Me.GetUserAccessRecordOperationCompleted = AddressOf Me.OnGetUserAccessRecordOperationCompleted
            End If
            Me.InvokeAsync("GetUserAccessRecord", New Object() {strUserId, strAPP_ID}, Me.GetUserAccessRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserAccessRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserAccessRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserAccessRecordCompleted(Me, New GetUserAccessRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/ChangePassword", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ChangePassword(ByVal strUserID As String, ByVal strPasswordFrom As String, ByVal strPasswordTo As String, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("ChangePassword", New Object() {strUserID, strPasswordFrom, strPasswordTo, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginChangePassword(ByVal strUserID As String, ByVal strPasswordFrom As String, ByVal strPasswordTo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ChangePassword", New Object() {strUserID, strPasswordFrom, strPasswordTo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndChangePassword(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ChangePasswordAsync(ByVal strUserID As String, ByVal strPasswordFrom As String, ByVal strPasswordTo As String, ByVal strAPP_ID As String)
            Me.ChangePasswordAsync(strUserID, strPasswordFrom, strPasswordTo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ChangePasswordAsync(ByVal strUserID As String, ByVal strPasswordFrom As String, ByVal strPasswordTo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.ChangePasswordOperationCompleted Is Nothing) Then
                Me.ChangePasswordOperationCompleted = AddressOf Me.OnChangePasswordOperationCompleted
            End If
            Me.InvokeAsync("ChangePassword", New Object() {strUserID, strPasswordFrom, strPasswordTo, strAPP_ID}, Me.ChangePasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnChangePasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.ChangePasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ChangePasswordCompleted(Me, New ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KatalaWebservices/syseventprocedure", RequestNamespace:="http://tempuri.org/KatalaWebservices", ResponseNamespace:="http://tempuri.org/KatalaWebservices", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub syseventprocedure(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.Invoke("syseventprocedure", New Object() {adoDS, strAPP_ID})
        End Sub
        
        '''<remarks/>
        Public Function Beginsyseventprocedure(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("syseventprocedure", New Object() {adoDS, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub Endsyseventprocedure(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub syseventprocedureAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.syseventprocedureAsync(adoDS, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub syseventprocedureAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.syseventprocedureOperationCompleted Is Nothing) Then
                Me.syseventprocedureOperationCompleted = AddressOf Me.OnsyseventprocedureOperationCompleted
            End If
            Me.InvokeAsync("syseventprocedure", New Object() {adoDS, strAPP_ID}, Me.syseventprocedureOperationCompleted, userState)
        End Sub
        
        Private Sub OnsyseventprocedureOperationCompleted(ByVal arg As Object)
            If (Not (Me.syseventprocedureCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent syseventprocedureCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUserAccessReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserAccessReportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserAccessReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateUserAccessCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUserAccessInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserAccessInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserAccessInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteUserAccessCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteUserAccessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteUserAccessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddNewProgramAccessToUserCompletedEventHandler(ByVal sender As Object, ByVal e As AddNewProgramAccessToUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddNewProgramAccessToUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateUserInfoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUserInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteUserCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddNewUserCompletedEventHandler(ByVal sender As Object, ByVal e As AddNewUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddNewUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUserListCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUserAccessValueCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserAccessValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserAccessValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub LogonCompletedEventHandler(ByVal sender As Object, ByVal e As LogonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LogonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUserAccessRecordCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserAccessRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserAccessRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub ChangePasswordCompletedEventHandler(ByVal sender As Object, ByVal e As ChangePasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ChangePasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub syseventprocedureCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
