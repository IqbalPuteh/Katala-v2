'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace Loan
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="svcLoanSoap", [Namespace]:="http://localhost/KatalaWebServices/svcLoan")>  _
    Partial Public Class svcLoan
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetEscrowAcctPeriodOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteLoanStandartOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLoanPaymentStandartOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUploadStandartPeriodOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadLoanStandartOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLoanAcctPeriodOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateClosingProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddLoanRegistrationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLoanRegistrationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateLoanRegistrationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateLoanStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLoanTobeEndedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLoanRegistratedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMemberLoanTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddNewEscrowTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteLoanTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLoanInstallmentSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/katalawebservices/svcloan.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetEscrowAcctPeriodCompleted As GetEscrowAcctPeriodCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteLoanStandartCompleted As DeleteLoanStandartCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLoanPaymentStandartCompleted As GetLoanPaymentStandartCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUploadStandartPeriodCompleted As GetUploadStandartPeriodCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadLoanStandartCompleted As UploadLoanStandartCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLoanAcctPeriodCompleted As GetLoanAcctPeriodCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateClosingProcessCompleted As UpdateClosingProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event AddLoanRegistrationCompleted As AddLoanRegistrationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLoanRegistrationCompleted As GetLoanRegistrationCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateLoanRegistrationCompleted As UpdateLoanRegistrationCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateLoanStatusCompleted As UpdateLoanStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLoanTobeEndedCompleted As GetLoanTobeEndedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLoanRegistratedCompleted As GetLoanRegistratedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMemberLoanTransactionCompleted As GetMemberLoanTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event AddNewEscrowTransactionCompleted As AddNewEscrowTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteLoanTransactionCompleted As DeleteLoanTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLoanInstallmentSummaryCompleted As GetLoanInstallmentSummaryCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/GetEscrowAcctPeriod", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEscrowAcctPeriod(ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEscrowAcctPeriod", New Object() {strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetEscrowAcctPeriod(ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetEscrowAcctPeriod", New Object() {strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetEscrowAcctPeriod(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEscrowAcctPeriodAsync(ByVal strAPP_ID As String)
            Me.GetEscrowAcctPeriodAsync(strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEscrowAcctPeriodAsync(ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetEscrowAcctPeriodOperationCompleted Is Nothing) Then
                Me.GetEscrowAcctPeriodOperationCompleted = AddressOf Me.OnGetEscrowAcctPeriodOperationCompleted
            End If
            Me.InvokeAsync("GetEscrowAcctPeriod", New Object() {strAPP_ID}, Me.GetEscrowAcctPeriodOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEscrowAcctPeriodOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEscrowAcctPeriodCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEscrowAcctPeriodCompleted(Me, New GetEscrowAcctPeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/DeleteLoanStandart", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteLoanStandart(ByVal strPeriod As String, ByVal strApp_Id As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteLoanStandart", New Object() {strPeriod, strApp_Id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteLoanStandart(ByVal strPeriod As String, ByVal strApp_Id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteLoanStandart", New Object() {strPeriod, strApp_Id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteLoanStandart(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteLoanStandartAsync(ByVal strPeriod As String, ByVal strApp_Id As String)
            Me.DeleteLoanStandartAsync(strPeriod, strApp_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteLoanStandartAsync(ByVal strPeriod As String, ByVal strApp_Id As String, ByVal userState As Object)
            If (Me.DeleteLoanStandartOperationCompleted Is Nothing) Then
                Me.DeleteLoanStandartOperationCompleted = AddressOf Me.OnDeleteLoanStandartOperationCompleted
            End If
            Me.InvokeAsync("DeleteLoanStandart", New Object() {strPeriod, strApp_Id}, Me.DeleteLoanStandartOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteLoanStandartOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteLoanStandartCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteLoanStandartCompleted(Me, New DeleteLoanStandartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/GetLoanPaymentStandart", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLoanPaymentStandart(ByVal strMembership_no As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLoanPaymentStandart", New Object() {strMembership_no, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLoanPaymentStandart(ByVal strMembership_no As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLoanPaymentStandart", New Object() {strMembership_no, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLoanPaymentStandart(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLoanPaymentStandartAsync(ByVal strMembership_no As String, ByVal strAPP_ID As String)
            Me.GetLoanPaymentStandartAsync(strMembership_no, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLoanPaymentStandartAsync(ByVal strMembership_no As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetLoanPaymentStandartOperationCompleted Is Nothing) Then
                Me.GetLoanPaymentStandartOperationCompleted = AddressOf Me.OnGetLoanPaymentStandartOperationCompleted
            End If
            Me.InvokeAsync("GetLoanPaymentStandart", New Object() {strMembership_no, strAPP_ID}, Me.GetLoanPaymentStandartOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLoanPaymentStandartOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLoanPaymentStandartCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLoanPaymentStandartCompleted(Me, New GetLoanPaymentStandartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/GetUploadStandartPeriod", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUploadStandartPeriod(ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetUploadStandartPeriod", New Object() {strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetUploadStandartPeriod(ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetUploadStandartPeriod", New Object() {strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetUploadStandartPeriod(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUploadStandartPeriodAsync(ByVal strAPP_ID As String)
            Me.GetUploadStandartPeriodAsync(strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUploadStandartPeriodAsync(ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetUploadStandartPeriodOperationCompleted Is Nothing) Then
                Me.GetUploadStandartPeriodOperationCompleted = AddressOf Me.OnGetUploadStandartPeriodOperationCompleted
            End If
            Me.InvokeAsync("GetUploadStandartPeriod", New Object() {strAPP_ID}, Me.GetUploadStandartPeriodOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUploadStandartPeriodOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUploadStandartPeriodCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUploadStandartPeriodCompleted(Me, New GetUploadStandartPeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/UploadLoanStandart", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadLoanStandart(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String) As String
            Dim results() As Object = Me.Invoke("UploadLoanStandart", New Object() {adoDS, strPeriod, strUserId, strApp_Id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUploadLoanStandart(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UploadLoanStandart", New Object() {adoDS, strPeriod, strUserId, strApp_Id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUploadLoanStandart(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadLoanStandartAsync(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String)
            Me.UploadLoanStandartAsync(adoDS, strPeriod, strUserId, strApp_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadLoanStandartAsync(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String, ByVal userState As Object)
            If (Me.UploadLoanStandartOperationCompleted Is Nothing) Then
                Me.UploadLoanStandartOperationCompleted = AddressOf Me.OnUploadLoanStandartOperationCompleted
            End If
            Me.InvokeAsync("UploadLoanStandart", New Object() {adoDS, strPeriod, strUserId, strApp_Id}, Me.UploadLoanStandartOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadLoanStandartOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadLoanStandartCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadLoanStandartCompleted(Me, New UploadLoanStandartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/GetLoanAcctPeriod", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLoanAcctPeriod(ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLoanAcctPeriod", New Object() {strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLoanAcctPeriod(ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLoanAcctPeriod", New Object() {strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLoanAcctPeriod(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLoanAcctPeriodAsync(ByVal strAPP_ID As String)
            Me.GetLoanAcctPeriodAsync(strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLoanAcctPeriodAsync(ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetLoanAcctPeriodOperationCompleted Is Nothing) Then
                Me.GetLoanAcctPeriodOperationCompleted = AddressOf Me.OnGetLoanAcctPeriodOperationCompleted
            End If
            Me.InvokeAsync("GetLoanAcctPeriod", New Object() {strAPP_ID}, Me.GetLoanAcctPeriodOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLoanAcctPeriodOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLoanAcctPeriodCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLoanAcctPeriodCompleted(Me, New GetLoanAcctPeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/UpdateClosingProcess", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateClosingProcess(ByVal strCurrentAcctPeriod As String, ByVal strNextAcctPeriod As String, ByVal strUserId As String, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("UpdateClosingProcess", New Object() {strCurrentAcctPeriod, strNextAcctPeriod, strUserId, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateClosingProcess(ByVal strCurrentAcctPeriod As String, ByVal strNextAcctPeriod As String, ByVal strUserId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateClosingProcess", New Object() {strCurrentAcctPeriod, strNextAcctPeriod, strUserId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateClosingProcess(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateClosingProcessAsync(ByVal strCurrentAcctPeriod As String, ByVal strNextAcctPeriod As String, ByVal strUserId As String, ByVal strAPP_ID As String)
            Me.UpdateClosingProcessAsync(strCurrentAcctPeriod, strNextAcctPeriod, strUserId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateClosingProcessAsync(ByVal strCurrentAcctPeriod As String, ByVal strNextAcctPeriod As String, ByVal strUserId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.UpdateClosingProcessOperationCompleted Is Nothing) Then
                Me.UpdateClosingProcessOperationCompleted = AddressOf Me.OnUpdateClosingProcessOperationCompleted
            End If
            Me.InvokeAsync("UpdateClosingProcess", New Object() {strCurrentAcctPeriod, strNextAcctPeriod, strUserId, strAPP_ID}, Me.UpdateClosingProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateClosingProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateClosingProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateClosingProcessCompleted(Me, New UpdateClosingProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/AddLoanRegistration", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddLoanRegistration(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String) As String
            Dim results() As Object = Me.Invoke("AddLoanRegistration", New Object() {adoDS, strApp_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddLoanRegistration(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddLoanRegistration", New Object() {adoDS, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddLoanRegistration(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddLoanRegistrationAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String)
            Me.AddLoanRegistrationAsync(adoDS, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddLoanRegistrationAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.AddLoanRegistrationOperationCompleted Is Nothing) Then
                Me.AddLoanRegistrationOperationCompleted = AddressOf Me.OnAddLoanRegistrationOperationCompleted
            End If
            Me.InvokeAsync("AddLoanRegistration", New Object() {adoDS, strApp_id}, Me.AddLoanRegistrationOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddLoanRegistrationOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddLoanRegistrationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddLoanRegistrationCompleted(Me, New AddLoanRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/GetLoanRegistration", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLoanRegistration(ByVal strMembershipId As String, ByVal strRegPeriod As String, ByVal strKreditType As String, ByVal strLoanId As String, ByVal strId As String, ByVal strStatus As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLoanRegistration", New Object() {strMembershipId, strRegPeriod, strKreditType, strLoanId, strId, strStatus, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLoanRegistration(ByVal strMembershipId As String, ByVal strRegPeriod As String, ByVal strKreditType As String, ByVal strLoanId As String, ByVal strId As String, ByVal strStatus As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLoanRegistration", New Object() {strMembershipId, strRegPeriod, strKreditType, strLoanId, strId, strStatus, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLoanRegistration(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLoanRegistrationAsync(ByVal strMembershipId As String, ByVal strRegPeriod As String, ByVal strKreditType As String, ByVal strLoanId As String, ByVal strId As String, ByVal strStatus As String, ByVal strAPP_ID As String)
            Me.GetLoanRegistrationAsync(strMembershipId, strRegPeriod, strKreditType, strLoanId, strId, strStatus, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLoanRegistrationAsync(ByVal strMembershipId As String, ByVal strRegPeriod As String, ByVal strKreditType As String, ByVal strLoanId As String, ByVal strId As String, ByVal strStatus As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetLoanRegistrationOperationCompleted Is Nothing) Then
                Me.GetLoanRegistrationOperationCompleted = AddressOf Me.OnGetLoanRegistrationOperationCompleted
            End If
            Me.InvokeAsync("GetLoanRegistration", New Object() {strMembershipId, strRegPeriod, strKreditType, strLoanId, strId, strStatus, strAPP_ID}, Me.GetLoanRegistrationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLoanRegistrationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLoanRegistrationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLoanRegistrationCompleted(Me, New GetLoanRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/UpdateLoanRegistration", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateLoanRegistration(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String) As String
            Dim results() As Object = Me.Invoke("UpdateLoanRegistration", New Object() {adoDS, strApp_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateLoanRegistration(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateLoanRegistration", New Object() {adoDS, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateLoanRegistration(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateLoanRegistrationAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String)
            Me.UpdateLoanRegistrationAsync(adoDS, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateLoanRegistrationAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.UpdateLoanRegistrationOperationCompleted Is Nothing) Then
                Me.UpdateLoanRegistrationOperationCompleted = AddressOf Me.OnUpdateLoanRegistrationOperationCompleted
            End If
            Me.InvokeAsync("UpdateLoanRegistration", New Object() {adoDS, strApp_id}, Me.UpdateLoanRegistrationOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateLoanRegistrationOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateLoanRegistrationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateLoanRegistrationCompleted(Me, New UpdateLoanRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/UpdateLoanStatus", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateLoanStatus(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String) As String
            Dim results() As Object = Me.Invoke("UpdateLoanStatus", New Object() {adoDS, strApp_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateLoanStatus(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateLoanStatus", New Object() {adoDS, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateLoanStatus(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateLoanStatusAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String)
            Me.UpdateLoanStatusAsync(adoDS, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateLoanStatusAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.UpdateLoanStatusOperationCompleted Is Nothing) Then
                Me.UpdateLoanStatusOperationCompleted = AddressOf Me.OnUpdateLoanStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateLoanStatus", New Object() {adoDS, strApp_id}, Me.UpdateLoanStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateLoanStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateLoanStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateLoanStatusCompleted(Me, New UpdateLoanStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/GetLoanTobeEnded", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLoanTobeEnded(ByVal intMonthVar As Integer, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLoanTobeEnded", New Object() {intMonthVar, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLoanTobeEnded(ByVal intMonthVar As Integer, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLoanTobeEnded", New Object() {intMonthVar, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLoanTobeEnded(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLoanTobeEndedAsync(ByVal intMonthVar As Integer, ByVal strAPP_ID As String)
            Me.GetLoanTobeEndedAsync(intMonthVar, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLoanTobeEndedAsync(ByVal intMonthVar As Integer, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetLoanTobeEndedOperationCompleted Is Nothing) Then
                Me.GetLoanTobeEndedOperationCompleted = AddressOf Me.OnGetLoanTobeEndedOperationCompleted
            End If
            Me.InvokeAsync("GetLoanTobeEnded", New Object() {intMonthVar, strAPP_ID}, Me.GetLoanTobeEndedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLoanTobeEndedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLoanTobeEndedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLoanTobeEndedCompleted(Me, New GetLoanTobeEndedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/GetLoanRegistrated", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLoanRegistrated(ByVal strDateStart As String, ByVal strPeriod As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLoanRegistrated", New Object() {strDateStart, strPeriod, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLoanRegistrated(ByVal strDateStart As String, ByVal strPeriod As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLoanRegistrated", New Object() {strDateStart, strPeriod, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLoanRegistrated(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLoanRegistratedAsync(ByVal strDateStart As String, ByVal strPeriod As String, ByVal strAPP_ID As String)
            Me.GetLoanRegistratedAsync(strDateStart, strPeriod, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLoanRegistratedAsync(ByVal strDateStart As String, ByVal strPeriod As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetLoanRegistratedOperationCompleted Is Nothing) Then
                Me.GetLoanRegistratedOperationCompleted = AddressOf Me.OnGetLoanRegistratedOperationCompleted
            End If
            Me.InvokeAsync("GetLoanRegistrated", New Object() {strDateStart, strPeriod, strAPP_ID}, Me.GetLoanRegistratedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLoanRegistratedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLoanRegistratedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLoanRegistratedCompleted(Me, New GetLoanRegistratedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/GetMemberLoanTransaction", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMemberLoanTransaction(ByVal strMembership_no As String, ByVal strPeriod As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMemberLoanTransaction", New Object() {strMembership_no, strPeriod, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMemberLoanTransaction(ByVal strMembership_no As String, ByVal strPeriod As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMemberLoanTransaction", New Object() {strMembership_no, strPeriod, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMemberLoanTransaction(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMemberLoanTransactionAsync(ByVal strMembership_no As String, ByVal strPeriod As String, ByVal strAPP_ID As String)
            Me.GetMemberLoanTransactionAsync(strMembership_no, strPeriod, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMemberLoanTransactionAsync(ByVal strMembership_no As String, ByVal strPeriod As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMemberLoanTransactionOperationCompleted Is Nothing) Then
                Me.GetMemberLoanTransactionOperationCompleted = AddressOf Me.OnGetMemberLoanTransactionOperationCompleted
            End If
            Me.InvokeAsync("GetMemberLoanTransaction", New Object() {strMembership_no, strPeriod, strAPP_ID}, Me.GetMemberLoanTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMemberLoanTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMemberLoanTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMemberLoanTransactionCompleted(Me, New GetMemberLoanTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/AddNewEscrowTransaction", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddNewEscrowTransaction(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String) As String
            Dim results() As Object = Me.Invoke("AddNewEscrowTransaction", New Object() {adoDS, strApp_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddNewEscrowTransaction(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddNewEscrowTransaction", New Object() {adoDS, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddNewEscrowTransaction(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddNewEscrowTransactionAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String)
            Me.AddNewEscrowTransactionAsync(adoDS, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddNewEscrowTransactionAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.AddNewEscrowTransactionOperationCompleted Is Nothing) Then
                Me.AddNewEscrowTransactionOperationCompleted = AddressOf Me.OnAddNewEscrowTransactionOperationCompleted
            End If
            Me.InvokeAsync("AddNewEscrowTransaction", New Object() {adoDS, strApp_id}, Me.AddNewEscrowTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddNewEscrowTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddNewEscrowTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddNewEscrowTransactionCompleted(Me, New AddNewEscrowTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/DeleteLoanTransaction", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteLoanTransaction(ByVal strTransId As String, ByVal strApp_Id As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteLoanTransaction", New Object() {strTransId, strApp_Id})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginDeleteLoanTransaction(ByVal strTransId As String, ByVal strApp_Id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteLoanTransaction", New Object() {strTransId, strApp_Id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDeleteLoanTransaction(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteLoanTransactionAsync(ByVal strTransId As String, ByVal strApp_Id As String)
            Me.DeleteLoanTransactionAsync(strTransId, strApp_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteLoanTransactionAsync(ByVal strTransId As String, ByVal strApp_Id As String, ByVal userState As Object)
            If (Me.DeleteLoanTransactionOperationCompleted Is Nothing) Then
                Me.DeleteLoanTransactionOperationCompleted = AddressOf Me.OnDeleteLoanTransactionOperationCompleted
            End If
            Me.InvokeAsync("DeleteLoanTransaction", New Object() {strTransId, strApp_Id}, Me.DeleteLoanTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteLoanTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteLoanTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteLoanTransactionCompleted(Me, New DeleteLoanTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/KatalaWebServices/svcLoan/GetLoanInstallmentSummary", RequestNamespace:="http://localhost/KatalaWebServices/svcLoan", ResponseNamespace:="http://localhost/KatalaWebServices/svcLoan", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLoanInstallmentSummary(ByVal strPeriod As String, ByVal strApp_Id As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetLoanInstallmentSummary", New Object() {strPeriod, strApp_Id})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLoanInstallmentSummary(ByVal strPeriod As String, ByVal strApp_Id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLoanInstallmentSummary", New Object() {strPeriod, strApp_Id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLoanInstallmentSummary(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLoanInstallmentSummaryAsync(ByVal strPeriod As String, ByVal strApp_Id As String)
            Me.GetLoanInstallmentSummaryAsync(strPeriod, strApp_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLoanInstallmentSummaryAsync(ByVal strPeriod As String, ByVal strApp_Id As String, ByVal userState As Object)
            If (Me.GetLoanInstallmentSummaryOperationCompleted Is Nothing) Then
                Me.GetLoanInstallmentSummaryOperationCompleted = AddressOf Me.OnGetLoanInstallmentSummaryOperationCompleted
            End If
            Me.InvokeAsync("GetLoanInstallmentSummary", New Object() {strPeriod, strApp_Id}, Me.GetLoanInstallmentSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLoanInstallmentSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLoanInstallmentSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLoanInstallmentSummaryCompleted(Me, New GetLoanInstallmentSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetEscrowAcctPeriodCompletedEventHandler(ByVal sender As Object, ByVal e As GetEscrowAcctPeriodCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEscrowAcctPeriodCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteLoanStandartCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteLoanStandartCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteLoanStandartCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetLoanPaymentStandartCompletedEventHandler(ByVal sender As Object, ByVal e As GetLoanPaymentStandartCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLoanPaymentStandartCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetUploadStandartPeriodCompletedEventHandler(ByVal sender As Object, ByVal e As GetUploadStandartPeriodCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUploadStandartPeriodCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UploadLoanStandartCompletedEventHandler(ByVal sender As Object, ByVal e As UploadLoanStandartCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadLoanStandartCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetLoanAcctPeriodCompletedEventHandler(ByVal sender As Object, ByVal e As GetLoanAcctPeriodCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLoanAcctPeriodCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateClosingProcessCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateClosingProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateClosingProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddLoanRegistrationCompletedEventHandler(ByVal sender As Object, ByVal e As AddLoanRegistrationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddLoanRegistrationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetLoanRegistrationCompletedEventHandler(ByVal sender As Object, ByVal e As GetLoanRegistrationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLoanRegistrationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateLoanRegistrationCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateLoanRegistrationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateLoanRegistrationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateLoanStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateLoanStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateLoanStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetLoanTobeEndedCompletedEventHandler(ByVal sender As Object, ByVal e As GetLoanTobeEndedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLoanTobeEndedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetLoanRegistratedCompletedEventHandler(ByVal sender As Object, ByVal e As GetLoanRegistratedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLoanRegistratedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMemberLoanTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As GetMemberLoanTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMemberLoanTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddNewEscrowTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As AddNewEscrowTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddNewEscrowTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteLoanTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteLoanTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteLoanTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetLoanInstallmentSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetLoanInstallmentSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLoanInstallmentSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
