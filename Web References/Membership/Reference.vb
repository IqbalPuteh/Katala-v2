'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace Membership
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="svcMembershipSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class svcMembership
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetMemberTransactionSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMemberYearlyIntrestValOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMonthlyTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMonthlyTransactionByTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMonthlyInterestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MembershipClosingProcessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MembershipClosingProcessOrigOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadMembershipTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMembershipAcctPeriodOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateMemberCapitalInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddNewMemberCapitalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMemberCapitalInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMemberDetailCapitalInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMemberNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateMembershipSystemParametersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMemberSystemInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDetailMemberInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMemberInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateMemberInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteMemberInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddNewMemberInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransactionInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransactionDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMemberInstallmentSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetInstallmentInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddNewTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTotalSavingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadMembershipDevidenEnhancedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadMembershipSpecialIntrestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMonthlyIntrestPaymentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMonthlyAdminDeductionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetIntrestTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransCodeDBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransCodeCROperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadLoanDeductionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLoanDeductionUploadStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMemberPinOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddUpdateNewPinOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/KatalaWebServices/svcMembership.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetMemberTransactionSummaryCompleted As GetMemberTransactionSummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMemberYearlyIntrestValCompleted As GetMemberYearlyIntrestValCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMonthlyTransactionCompleted As GetMonthlyTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMonthlyTransactionByTypeCompleted As GetMonthlyTransactionByTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMonthlyInterestCompleted As GetMonthlyInterestCompletedEventHandler
        
        '''<remarks/>
        Public Event MembershipClosingProcessCompleted As MembershipClosingProcessCompletedEventHandler
        
        '''<remarks/>
        Public Event MembershipClosingProcessOrigCompleted As MembershipClosingProcessOrigCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadMembershipTransactionCompleted As UploadMembershipTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMembershipAcctPeriodCompleted As GetMembershipAcctPeriodCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateMemberCapitalInfoCompleted As UpdateMemberCapitalInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event AddNewMemberCapitalCompleted As AddNewMemberCapitalCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMemberCapitalInfoCompleted As GetMemberCapitalInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMemberDetailCapitalInfoCompleted As GetMemberDetailCapitalInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMemberNameCompleted As GetMemberNameCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateMembershipSystemParametersCompleted As UpdateMembershipSystemParametersCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMemberSystemInfoCompleted As GetMemberSystemInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDetailMemberInfoCompleted As GetDetailMemberInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMemberInfoCompleted As GetMemberInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateMemberInfoCompleted As UpdateMemberInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteMemberInfoCompleted As DeleteMemberInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event AddNewMemberInfoCompleted As AddNewMemberInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransactionInfoCompleted As GetTransactionInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransactionCompleted As GetTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransactionDetailCompleted As GetTransactionDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMemberInstallmentSummaryCompleted As GetMemberInstallmentSummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetInstallmentInfoCompleted As GetInstallmentInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event AddNewTransactionCompleted As AddNewTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateTransactionCompleted As UpdateTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTotalSavingCompleted As GetTotalSavingCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadMembershipDevidenEnhancedCompleted As UploadMembershipDevidenEnhancedCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadMembershipSpecialIntrestCompleted As UploadMembershipSpecialIntrestCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMonthlyIntrestPaymentCompleted As GetMonthlyIntrestPaymentCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMonthlyAdminDeductionCompleted As GetMonthlyAdminDeductionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetIntrestTypeCompleted As GetIntrestTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransCodeDBCompleted As GetTransCodeDBCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransCodeCRCompleted As GetTransCodeCRCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadLoanDeductionCompleted As UploadLoanDeductionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLoanDeductionUploadStatusCompleted As GetLoanDeductionUploadStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMemberPinCompleted As GetMemberPinCompletedEventHandler
        
        '''<remarks/>
        Public Event AddUpdateNewPinCompleted As AddUpdateNewPinCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberTransactionSummary", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMemberTransactionSummary(ByVal strMembershipNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMemberTransactionSummary", New Object() {strMembershipNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMemberTransactionSummary(ByVal strMembershipNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMemberTransactionSummary", New Object() {strMembershipNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMemberTransactionSummary(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMemberTransactionSummaryAsync(ByVal strMembershipNo As String, ByVal strAPP_ID As String)
            Me.GetMemberTransactionSummaryAsync(strMembershipNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMemberTransactionSummaryAsync(ByVal strMembershipNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMemberTransactionSummaryOperationCompleted Is Nothing) Then
                Me.GetMemberTransactionSummaryOperationCompleted = AddressOf Me.OnGetMemberTransactionSummaryOperationCompleted
            End If
            Me.InvokeAsync("GetMemberTransactionSummary", New Object() {strMembershipNo, strAPP_ID}, Me.GetMemberTransactionSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMemberTransactionSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMemberTransactionSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMemberTransactionSummaryCompleted(Me, New GetMemberTransactionSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberYearlyIntrestVal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMemberYearlyIntrestVal(ByVal strMembershipNo As String, ByVal strYear As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMemberYearlyIntrestVal", New Object() {strMembershipNo, strYear, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMemberYearlyIntrestVal(ByVal strMembershipNo As String, ByVal strYear As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMemberYearlyIntrestVal", New Object() {strMembershipNo, strYear, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMemberYearlyIntrestVal(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMemberYearlyIntrestValAsync(ByVal strMembershipNo As String, ByVal strYear As String, ByVal strAPP_ID As String)
            Me.GetMemberYearlyIntrestValAsync(strMembershipNo, strYear, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMemberYearlyIntrestValAsync(ByVal strMembershipNo As String, ByVal strYear As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMemberYearlyIntrestValOperationCompleted Is Nothing) Then
                Me.GetMemberYearlyIntrestValOperationCompleted = AddressOf Me.OnGetMemberYearlyIntrestValOperationCompleted
            End If
            Me.InvokeAsync("GetMemberYearlyIntrestVal", New Object() {strMembershipNo, strYear, strAPP_ID}, Me.GetMemberYearlyIntrestValOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMemberYearlyIntrestValOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMemberYearlyIntrestValCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMemberYearlyIntrestValCompleted(Me, New GetMemberYearlyIntrestValCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMonthlyTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMonthlyTransaction(ByVal strAcctPeriod As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMonthlyTransaction", New Object() {strAcctPeriod, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMonthlyTransaction(ByVal strAcctPeriod As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMonthlyTransaction", New Object() {strAcctPeriod, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMonthlyTransaction(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMonthlyTransactionAsync(ByVal strAcctPeriod As String, ByVal strAPP_ID As String)
            Me.GetMonthlyTransactionAsync(strAcctPeriod, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMonthlyTransactionAsync(ByVal strAcctPeriod As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMonthlyTransactionOperationCompleted Is Nothing) Then
                Me.GetMonthlyTransactionOperationCompleted = AddressOf Me.OnGetMonthlyTransactionOperationCompleted
            End If
            Me.InvokeAsync("GetMonthlyTransaction", New Object() {strAcctPeriod, strAPP_ID}, Me.GetMonthlyTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMonthlyTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMonthlyTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMonthlyTransactionCompleted(Me, New GetMonthlyTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMonthlyTransactionByType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMonthlyTransactionByType(ByVal strAcctPeriod As String, ByVal strType As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMonthlyTransactionByType", New Object() {strAcctPeriod, strType, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMonthlyTransactionByType(ByVal strAcctPeriod As String, ByVal strType As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMonthlyTransactionByType", New Object() {strAcctPeriod, strType, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMonthlyTransactionByType(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMonthlyTransactionByTypeAsync(ByVal strAcctPeriod As String, ByVal strType As String, ByVal strAPP_ID As String)
            Me.GetMonthlyTransactionByTypeAsync(strAcctPeriod, strType, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMonthlyTransactionByTypeAsync(ByVal strAcctPeriod As String, ByVal strType As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMonthlyTransactionByTypeOperationCompleted Is Nothing) Then
                Me.GetMonthlyTransactionByTypeOperationCompleted = AddressOf Me.OnGetMonthlyTransactionByTypeOperationCompleted
            End If
            Me.InvokeAsync("GetMonthlyTransactionByType", New Object() {strAcctPeriod, strType, strAPP_ID}, Me.GetMonthlyTransactionByTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMonthlyTransactionByTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMonthlyTransactionByTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMonthlyTransactionByTypeCompleted(Me, New GetMonthlyTransactionByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMonthlyInterest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMonthlyInterest(ByVal strAcctPeriod As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMonthlyInterest", New Object() {strAcctPeriod, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMonthlyInterest(ByVal strAcctPeriod As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMonthlyInterest", New Object() {strAcctPeriod, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMonthlyInterest(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMonthlyInterestAsync(ByVal strAcctPeriod As String, ByVal strAPP_ID As String)
            Me.GetMonthlyInterestAsync(strAcctPeriod, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMonthlyInterestAsync(ByVal strAcctPeriod As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMonthlyInterestOperationCompleted Is Nothing) Then
                Me.GetMonthlyInterestOperationCompleted = AddressOf Me.OnGetMonthlyInterestOperationCompleted
            End If
            Me.InvokeAsync("GetMonthlyInterest", New Object() {strAcctPeriod, strAPP_ID}, Me.GetMonthlyInterestOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMonthlyInterestOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMonthlyInterestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMonthlyInterestCompleted(Me, New GetMonthlyInterestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MembershipClosingProcess", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MembershipClosingProcess(ByVal strCurrentAcctPeriod As String, ByVal strNextAcctPeriod As String, ByVal strUserId As String, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("MembershipClosingProcess", New Object() {strCurrentAcctPeriod, strNextAcctPeriod, strUserId, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginMembershipClosingProcess(ByVal strCurrentAcctPeriod As String, ByVal strNextAcctPeriod As String, ByVal strUserId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MembershipClosingProcess", New Object() {strCurrentAcctPeriod, strNextAcctPeriod, strUserId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMembershipClosingProcess(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MembershipClosingProcessAsync(ByVal strCurrentAcctPeriod As String, ByVal strNextAcctPeriod As String, ByVal strUserId As String, ByVal strAPP_ID As String)
            Me.MembershipClosingProcessAsync(strCurrentAcctPeriod, strNextAcctPeriod, strUserId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MembershipClosingProcessAsync(ByVal strCurrentAcctPeriod As String, ByVal strNextAcctPeriod As String, ByVal strUserId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.MembershipClosingProcessOperationCompleted Is Nothing) Then
                Me.MembershipClosingProcessOperationCompleted = AddressOf Me.OnMembershipClosingProcessOperationCompleted
            End If
            Me.InvokeAsync("MembershipClosingProcess", New Object() {strCurrentAcctPeriod, strNextAcctPeriod, strUserId, strAPP_ID}, Me.MembershipClosingProcessOperationCompleted, userState)
        End Sub
        
        Private Sub OnMembershipClosingProcessOperationCompleted(ByVal arg As Object)
            If (Not (Me.MembershipClosingProcessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MembershipClosingProcessCompleted(Me, New MembershipClosingProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MembershipClosingProcessOrig", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MembershipClosingProcessOrig(ByVal strCurrentAcctPeriod As String, ByVal strNextAcctPeriod As String, ByVal strUserId As String, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("MembershipClosingProcessOrig", New Object() {strCurrentAcctPeriod, strNextAcctPeriod, strUserId, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginMembershipClosingProcessOrig(ByVal strCurrentAcctPeriod As String, ByVal strNextAcctPeriod As String, ByVal strUserId As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("MembershipClosingProcessOrig", New Object() {strCurrentAcctPeriod, strNextAcctPeriod, strUserId, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndMembershipClosingProcessOrig(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MembershipClosingProcessOrigAsync(ByVal strCurrentAcctPeriod As String, ByVal strNextAcctPeriod As String, ByVal strUserId As String, ByVal strAPP_ID As String)
            Me.MembershipClosingProcessOrigAsync(strCurrentAcctPeriod, strNextAcctPeriod, strUserId, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MembershipClosingProcessOrigAsync(ByVal strCurrentAcctPeriod As String, ByVal strNextAcctPeriod As String, ByVal strUserId As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.MembershipClosingProcessOrigOperationCompleted Is Nothing) Then
                Me.MembershipClosingProcessOrigOperationCompleted = AddressOf Me.OnMembershipClosingProcessOrigOperationCompleted
            End If
            Me.InvokeAsync("MembershipClosingProcessOrig", New Object() {strCurrentAcctPeriod, strNextAcctPeriod, strUserId, strAPP_ID}, Me.MembershipClosingProcessOrigOperationCompleted, userState)
        End Sub
        
        Private Sub OnMembershipClosingProcessOrigOperationCompleted(ByVal arg As Object)
            If (Not (Me.MembershipClosingProcessOrigCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MembershipClosingProcessOrigCompleted(Me, New MembershipClosingProcessOrigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadMembershipTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadMembershipTransaction(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String) As String
            Dim results() As Object = Me.Invoke("UploadMembershipTransaction", New Object() {adoDS, strPeriod, strUserId, strApp_Id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUploadMembershipTransaction(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UploadMembershipTransaction", New Object() {adoDS, strPeriod, strUserId, strApp_Id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUploadMembershipTransaction(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadMembershipTransactionAsync(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String)
            Me.UploadMembershipTransactionAsync(adoDS, strPeriod, strUserId, strApp_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadMembershipTransactionAsync(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String, ByVal userState As Object)
            If (Me.UploadMembershipTransactionOperationCompleted Is Nothing) Then
                Me.UploadMembershipTransactionOperationCompleted = AddressOf Me.OnUploadMembershipTransactionOperationCompleted
            End If
            Me.InvokeAsync("UploadMembershipTransaction", New Object() {adoDS, strPeriod, strUserId, strApp_Id}, Me.UploadMembershipTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadMembershipTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadMembershipTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadMembershipTransactionCompleted(Me, New UploadMembershipTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMembershipAcctPeriod", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMembershipAcctPeriod(ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMembershipAcctPeriod", New Object() {strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMembershipAcctPeriod(ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMembershipAcctPeriod", New Object() {strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMembershipAcctPeriod(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMembershipAcctPeriodAsync(ByVal strAPP_ID As String)
            Me.GetMembershipAcctPeriodAsync(strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMembershipAcctPeriodAsync(ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMembershipAcctPeriodOperationCompleted Is Nothing) Then
                Me.GetMembershipAcctPeriodOperationCompleted = AddressOf Me.OnGetMembershipAcctPeriodOperationCompleted
            End If
            Me.InvokeAsync("GetMembershipAcctPeriod", New Object() {strAPP_ID}, Me.GetMembershipAcctPeriodOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMembershipAcctPeriodOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMembershipAcctPeriodCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMembershipAcctPeriodCompleted(Me, New GetMembershipAcctPeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMemberCapitalInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateMemberCapitalInfo(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String) As Object
            Dim results() As Object = Me.Invoke("UpdateMemberCapitalInfo", New Object() {adoDS, strApp_Id})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateMemberCapitalInfo(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateMemberCapitalInfo", New Object() {adoDS, strApp_Id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateMemberCapitalInfo(ByVal asyncResult As System.IAsyncResult) As Object
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateMemberCapitalInfoAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String)
            Me.UpdateMemberCapitalInfoAsync(adoDS, strApp_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMemberCapitalInfoAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String, ByVal userState As Object)
            If (Me.UpdateMemberCapitalInfoOperationCompleted Is Nothing) Then
                Me.UpdateMemberCapitalInfoOperationCompleted = AddressOf Me.OnUpdateMemberCapitalInfoOperationCompleted
            End If
            Me.InvokeAsync("UpdateMemberCapitalInfo", New Object() {adoDS, strApp_Id}, Me.UpdateMemberCapitalInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateMemberCapitalInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateMemberCapitalInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateMemberCapitalInfoCompleted(Me, New UpdateMemberCapitalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewMemberCapital", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddNewMemberCapital(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String) As String
            Dim results() As Object = Me.Invoke("AddNewMemberCapital", New Object() {adoDS, strApp_Id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddNewMemberCapital(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddNewMemberCapital", New Object() {adoDS, strApp_Id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddNewMemberCapital(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddNewMemberCapitalAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String)
            Me.AddNewMemberCapitalAsync(adoDS, strApp_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddNewMemberCapitalAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String, ByVal userState As Object)
            If (Me.AddNewMemberCapitalOperationCompleted Is Nothing) Then
                Me.AddNewMemberCapitalOperationCompleted = AddressOf Me.OnAddNewMemberCapitalOperationCompleted
            End If
            Me.InvokeAsync("AddNewMemberCapital", New Object() {adoDS, strApp_Id}, Me.AddNewMemberCapitalOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddNewMemberCapitalOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddNewMemberCapitalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddNewMemberCapitalCompleted(Me, New AddNewMemberCapitalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberCapitalInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMemberCapitalInfo(ByVal strMembershipNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMemberCapitalInfo", New Object() {strMembershipNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMemberCapitalInfo(ByVal strMembershipNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMemberCapitalInfo", New Object() {strMembershipNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMemberCapitalInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMemberCapitalInfoAsync(ByVal strMembershipNo As String, ByVal strAPP_ID As String)
            Me.GetMemberCapitalInfoAsync(strMembershipNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMemberCapitalInfoAsync(ByVal strMembershipNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMemberCapitalInfoOperationCompleted Is Nothing) Then
                Me.GetMemberCapitalInfoOperationCompleted = AddressOf Me.OnGetMemberCapitalInfoOperationCompleted
            End If
            Me.InvokeAsync("GetMemberCapitalInfo", New Object() {strMembershipNo, strAPP_ID}, Me.GetMemberCapitalInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMemberCapitalInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMemberCapitalInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMemberCapitalInfoCompleted(Me, New GetMemberCapitalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberDetailCapitalInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMemberDetailCapitalInfo(ByVal strMembershipNo As String, ByVal strEffectiveDate As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMemberDetailCapitalInfo", New Object() {strMembershipNo, strEffectiveDate, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMemberDetailCapitalInfo(ByVal strMembershipNo As String, ByVal strEffectiveDate As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMemberDetailCapitalInfo", New Object() {strMembershipNo, strEffectiveDate, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMemberDetailCapitalInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMemberDetailCapitalInfoAsync(ByVal strMembershipNo As String, ByVal strEffectiveDate As String, ByVal strAPP_ID As String)
            Me.GetMemberDetailCapitalInfoAsync(strMembershipNo, strEffectiveDate, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMemberDetailCapitalInfoAsync(ByVal strMembershipNo As String, ByVal strEffectiveDate As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMemberDetailCapitalInfoOperationCompleted Is Nothing) Then
                Me.GetMemberDetailCapitalInfoOperationCompleted = AddressOf Me.OnGetMemberDetailCapitalInfoOperationCompleted
            End If
            Me.InvokeAsync("GetMemberDetailCapitalInfo", New Object() {strMembershipNo, strEffectiveDate, strAPP_ID}, Me.GetMemberDetailCapitalInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMemberDetailCapitalInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMemberDetailCapitalInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMemberDetailCapitalInfoCompleted(Me, New GetMemberDetailCapitalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMemberName(ByVal strMembershipNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMemberName", New Object() {strMembershipNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMemberName(ByVal strMembershipNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMemberName", New Object() {strMembershipNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMemberName(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMemberNameAsync(ByVal strMembershipNo As String, ByVal strAPP_ID As String)
            Me.GetMemberNameAsync(strMembershipNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMemberNameAsync(ByVal strMembershipNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMemberNameOperationCompleted Is Nothing) Then
                Me.GetMemberNameOperationCompleted = AddressOf Me.OnGetMemberNameOperationCompleted
            End If
            Me.InvokeAsync("GetMemberName", New Object() {strMembershipNo, strAPP_ID}, Me.GetMemberNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMemberNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMemberNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMemberNameCompleted(Me, New GetMemberNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMembershipSystemParameters", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateMembershipSystemParameters(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("UpdateMembershipSystemParameters", New Object() {adoDS, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateMembershipSystemParameters(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateMembershipSystemParameters", New Object() {adoDS, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateMembershipSystemParameters(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateMembershipSystemParametersAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String)
            Me.UpdateMembershipSystemParametersAsync(adoDS, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMembershipSystemParametersAsync(ByVal adoDS As System.Data.DataSet, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.UpdateMembershipSystemParametersOperationCompleted Is Nothing) Then
                Me.UpdateMembershipSystemParametersOperationCompleted = AddressOf Me.OnUpdateMembershipSystemParametersOperationCompleted
            End If
            Me.InvokeAsync("UpdateMembershipSystemParameters", New Object() {adoDS, strAPP_ID}, Me.UpdateMembershipSystemParametersOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateMembershipSystemParametersOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateMembershipSystemParametersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateMembershipSystemParametersCompleted(Me, New UpdateMembershipSystemParametersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberSystemInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMemberSystemInfo(ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMemberSystemInfo", New Object() {strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMemberSystemInfo(ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMemberSystemInfo", New Object() {strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMemberSystemInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMemberSystemInfoAsync(ByVal strAPP_ID As String)
            Me.GetMemberSystemInfoAsync(strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMemberSystemInfoAsync(ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMemberSystemInfoOperationCompleted Is Nothing) Then
                Me.GetMemberSystemInfoOperationCompleted = AddressOf Me.OnGetMemberSystemInfoOperationCompleted
            End If
            Me.InvokeAsync("GetMemberSystemInfo", New Object() {strAPP_ID}, Me.GetMemberSystemInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMemberSystemInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMemberSystemInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMemberSystemInfoCompleted(Me, New GetMemberSystemInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDetailMemberInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDetailMemberInfo(ByVal strMemberNo As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetDetailMemberInfo", New Object() {strMemberNo, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetDetailMemberInfo(ByVal strMemberNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDetailMemberInfo", New Object() {strMemberNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDetailMemberInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDetailMemberInfoAsync(ByVal strMemberNo As String, ByVal strAPP_ID As String)
            Me.GetDetailMemberInfoAsync(strMemberNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDetailMemberInfoAsync(ByVal strMemberNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetDetailMemberInfoOperationCompleted Is Nothing) Then
                Me.GetDetailMemberInfoOperationCompleted = AddressOf Me.OnGetDetailMemberInfoOperationCompleted
            End If
            Me.InvokeAsync("GetDetailMemberInfo", New Object() {strMemberNo, strAPP_ID}, Me.GetDetailMemberInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDetailMemberInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDetailMemberInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDetailMemberInfoCompleted(Me, New GetDetailMemberInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMemberInfo(ByVal strMemberNo As String, ByVal strMemberName As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMemberInfo", New Object() {strMemberNo, strMemberName, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMemberInfo(ByVal strMemberNo As String, ByVal strMemberName As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMemberInfo", New Object() {strMemberNo, strMemberName, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMemberInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMemberInfoAsync(ByVal strMemberNo As String, ByVal strMemberName As String, ByVal strAPP_ID As String)
            Me.GetMemberInfoAsync(strMemberNo, strMemberName, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMemberInfoAsync(ByVal strMemberNo As String, ByVal strMemberName As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMemberInfoOperationCompleted Is Nothing) Then
                Me.GetMemberInfoOperationCompleted = AddressOf Me.OnGetMemberInfoOperationCompleted
            End If
            Me.InvokeAsync("GetMemberInfo", New Object() {strMemberNo, strMemberName, strAPP_ID}, Me.GetMemberInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMemberInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMemberInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMemberInfoCompleted(Me, New GetMemberInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMemberInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateMemberInfo(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String) As Object
            Dim results() As Object = Me.Invoke("UpdateMemberInfo", New Object() {adoDS, strApp_Id})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Function BeginUpdateMemberInfo(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateMemberInfo", New Object() {adoDS, strApp_Id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUpdateMemberInfo(ByVal asyncResult As System.IAsyncResult) As Object
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateMemberInfoAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String)
            Me.UpdateMemberInfoAsync(adoDS, strApp_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMemberInfoAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String, ByVal userState As Object)
            If (Me.UpdateMemberInfoOperationCompleted Is Nothing) Then
                Me.UpdateMemberInfoOperationCompleted = AddressOf Me.OnUpdateMemberInfoOperationCompleted
            End If
            Me.InvokeAsync("UpdateMemberInfo", New Object() {adoDS, strApp_Id}, Me.UpdateMemberInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateMemberInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateMemberInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateMemberInfoCompleted(Me, New UpdateMemberInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMemberInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeleteMemberInfo(ByVal strMemberNo As String, ByVal strAPP_ID As String)
            Me.Invoke("DeleteMemberInfo", New Object() {strMemberNo, strAPP_ID})
        End Sub
        
        '''<remarks/>
        Public Function BeginDeleteMemberInfo(ByVal strMemberNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("DeleteMemberInfo", New Object() {strMemberNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndDeleteMemberInfo(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteMemberInfoAsync(ByVal strMemberNo As String, ByVal strAPP_ID As String)
            Me.DeleteMemberInfoAsync(strMemberNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteMemberInfoAsync(ByVal strMemberNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.DeleteMemberInfoOperationCompleted Is Nothing) Then
                Me.DeleteMemberInfoOperationCompleted = AddressOf Me.OnDeleteMemberInfoOperationCompleted
            End If
            Me.InvokeAsync("DeleteMemberInfo", New Object() {strMemberNo, strAPP_ID}, Me.DeleteMemberInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteMemberInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteMemberInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteMemberInfoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewMemberInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddNewMemberInfo(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String) As String
            Dim results() As Object = Me.Invoke("AddNewMemberInfo", New Object() {adoDS, strApp_Id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddNewMemberInfo(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddNewMemberInfo", New Object() {adoDS, strApp_Id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddNewMemberInfo(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddNewMemberInfoAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String)
            Me.AddNewMemberInfoAsync(adoDS, strApp_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddNewMemberInfoAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_Id As String, ByVal userState As Object)
            If (Me.AddNewMemberInfoOperationCompleted Is Nothing) Then
                Me.AddNewMemberInfoOperationCompleted = AddressOf Me.OnAddNewMemberInfoOperationCompleted
            End If
            Me.InvokeAsync("AddNewMemberInfo", New Object() {adoDS, strApp_Id}, Me.AddNewMemberInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddNewMemberInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddNewMemberInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddNewMemberInfoCompleted(Me, New AddNewMemberInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransactionInfo(ByVal strMembershipNo As String, ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTransactionInfo", New Object() {strMembershipNo, dtStart, dtEnd, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTransactionInfo(ByVal strMembershipNo As String, ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTransactionInfo", New Object() {strMembershipNo, dtStart, dtEnd, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTransactionInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransactionInfoAsync(ByVal strMembershipNo As String, ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strAPP_ID As String)
            Me.GetTransactionInfoAsync(strMembershipNo, dtStart, dtEnd, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransactionInfoAsync(ByVal strMembershipNo As String, ByVal dtStart As Date, ByVal dtEnd As Date, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetTransactionInfoOperationCompleted Is Nothing) Then
                Me.GetTransactionInfoOperationCompleted = AddressOf Me.OnGetTransactionInfoOperationCompleted
            End If
            Me.InvokeAsync("GetTransactionInfo", New Object() {strMembershipNo, dtStart, dtEnd, strAPP_ID}, Me.GetTransactionInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransactionInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransactionInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransactionInfoCompleted(Me, New GetTransactionInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransaction(ByVal strMembershipNo As String, ByVal strAccPeriod As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTransaction", New Object() {strMembershipNo, strAccPeriod, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTransaction(ByVal strMembershipNo As String, ByVal strAccPeriod As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTransaction", New Object() {strMembershipNo, strAccPeriod, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTransaction(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransactionAsync(ByVal strMembershipNo As String, ByVal strAccPeriod As String, ByVal strAPP_ID As String)
            Me.GetTransactionAsync(strMembershipNo, strAccPeriod, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransactionAsync(ByVal strMembershipNo As String, ByVal strAccPeriod As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetTransactionOperationCompleted Is Nothing) Then
                Me.GetTransactionOperationCompleted = AddressOf Me.OnGetTransactionOperationCompleted
            End If
            Me.InvokeAsync("GetTransaction", New Object() {strMembershipNo, strAccPeriod, strAPP_ID}, Me.GetTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransactionCompleted(Me, New GetTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactionDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransactionDetail(ByVal strMembershipNo As String, ByVal strAccPeriod As String, ByVal strTransType As String, ByVal Amount As Double, ByVal Total As Double, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTransactionDetail", New Object() {strMembershipNo, strAccPeriod, strTransType, Amount, Total, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTransactionDetail(ByVal strMembershipNo As String, ByVal strAccPeriod As String, ByVal strTransType As String, ByVal Amount As Double, ByVal Total As Double, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTransactionDetail", New Object() {strMembershipNo, strAccPeriod, strTransType, Amount, Total, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTransactionDetail(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransactionDetailAsync(ByVal strMembershipNo As String, ByVal strAccPeriod As String, ByVal strTransType As String, ByVal Amount As Double, ByVal Total As Double, ByVal strAPP_ID As String)
            Me.GetTransactionDetailAsync(strMembershipNo, strAccPeriod, strTransType, Amount, Total, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransactionDetailAsync(ByVal strMembershipNo As String, ByVal strAccPeriod As String, ByVal strTransType As String, ByVal Amount As Double, ByVal Total As Double, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetTransactionDetailOperationCompleted Is Nothing) Then
                Me.GetTransactionDetailOperationCompleted = AddressOf Me.OnGetTransactionDetailOperationCompleted
            End If
            Me.InvokeAsync("GetTransactionDetail", New Object() {strMembershipNo, strAccPeriod, strTransType, Amount, Total, strAPP_ID}, Me.GetTransactionDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransactionDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransactionDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransactionDetailCompleted(Me, New GetTransactionDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberInstallmentSummary", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMemberInstallmentSummary(ByVal strPeriod As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMemberInstallmentSummary", New Object() {strPeriod, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMemberInstallmentSummary(ByVal strPeriod As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMemberInstallmentSummary", New Object() {strPeriod, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMemberInstallmentSummary(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMemberInstallmentSummaryAsync(ByVal strPeriod As String, ByVal strAPP_ID As String)
            Me.GetMemberInstallmentSummaryAsync(strPeriod, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMemberInstallmentSummaryAsync(ByVal strPeriod As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMemberInstallmentSummaryOperationCompleted Is Nothing) Then
                Me.GetMemberInstallmentSummaryOperationCompleted = AddressOf Me.OnGetMemberInstallmentSummaryOperationCompleted
            End If
            Me.InvokeAsync("GetMemberInstallmentSummary", New Object() {strPeriod, strAPP_ID}, Me.GetMemberInstallmentSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMemberInstallmentSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMemberInstallmentSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMemberInstallmentSummaryCompleted(Me, New GetMemberInstallmentSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstallmentInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetInstallmentInfo(ByVal dtMonth As Date, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetInstallmentInfo", New Object() {dtMonth, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetInstallmentInfo(ByVal dtMonth As Date, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetInstallmentInfo", New Object() {dtMonth, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetInstallmentInfo(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetInstallmentInfoAsync(ByVal dtMonth As Date, ByVal strAPP_ID As String)
            Me.GetInstallmentInfoAsync(dtMonth, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetInstallmentInfoAsync(ByVal dtMonth As Date, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetInstallmentInfoOperationCompleted Is Nothing) Then
                Me.GetInstallmentInfoOperationCompleted = AddressOf Me.OnGetInstallmentInfoOperationCompleted
            End If
            Me.InvokeAsync("GetInstallmentInfo", New Object() {dtMonth, strAPP_ID}, Me.GetInstallmentInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetInstallmentInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetInstallmentInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetInstallmentInfoCompleted(Me, New GetInstallmentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddNewTransaction(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String) As String
            Dim results() As Object = Me.Invoke("AddNewTransaction", New Object() {adoDS, strApp_id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddNewTransaction(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddNewTransaction", New Object() {adoDS, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddNewTransaction(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddNewTransactionAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String)
            Me.AddNewTransactionAsync(adoDS, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddNewTransactionAsync(ByVal adoDS As System.Data.DataSet, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.AddNewTransactionOperationCompleted Is Nothing) Then
                Me.AddNewTransactionOperationCompleted = AddressOf Me.OnAddNewTransactionOperationCompleted
            End If
            Me.InvokeAsync("AddNewTransaction", New Object() {adoDS, strApp_id}, Me.AddNewTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddNewTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddNewTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddNewTransactionCompleted(Me, New AddNewTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTransaction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateTransaction(ByVal adoDS As System.Data.DataSet, ByVal strAccPeriod As String, ByVal strUserId As String, ByVal strApp_id As String)
            Me.Invoke("UpdateTransaction", New Object() {adoDS, strAccPeriod, strUserId, strApp_id})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdateTransaction(ByVal adoDS As System.Data.DataSet, ByVal strAccPeriod As String, ByVal strUserId As String, ByVal strApp_id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdateTransaction", New Object() {adoDS, strAccPeriod, strUserId, strApp_id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdateTransaction(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateTransactionAsync(ByVal adoDS As System.Data.DataSet, ByVal strAccPeriod As String, ByVal strUserId As String, ByVal strApp_id As String)
            Me.UpdateTransactionAsync(adoDS, strAccPeriod, strUserId, strApp_id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateTransactionAsync(ByVal adoDS As System.Data.DataSet, ByVal strAccPeriod As String, ByVal strUserId As String, ByVal strApp_id As String, ByVal userState As Object)
            If (Me.UpdateTransactionOperationCompleted Is Nothing) Then
                Me.UpdateTransactionOperationCompleted = AddressOf Me.OnUpdateTransactionOperationCompleted
            End If
            Me.InvokeAsync("UpdateTransaction", New Object() {adoDS, strAccPeriod, strUserId, strApp_id}, Me.UpdateTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateTransactionCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTotalSaving", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTotalSaving(ByVal strMemberNo As String, ByVal strAPP_ID As String) As Double
            Dim results() As Object = Me.Invoke("GetTotalSaving", New Object() {strMemberNo, strAPP_ID})
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTotalSaving(ByVal strMemberNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTotalSaving", New Object() {strMemberNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTotalSaving(ByVal asyncResult As System.IAsyncResult) As Double
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTotalSavingAsync(ByVal strMemberNo As String, ByVal strAPP_ID As String)
            Me.GetTotalSavingAsync(strMemberNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTotalSavingAsync(ByVal strMemberNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetTotalSavingOperationCompleted Is Nothing) Then
                Me.GetTotalSavingOperationCompleted = AddressOf Me.OnGetTotalSavingOperationCompleted
            End If
            Me.InvokeAsync("GetTotalSaving", New Object() {strMemberNo, strAPP_ID}, Me.GetTotalSavingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTotalSavingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTotalSavingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTotalSavingCompleted(Me, New GetTotalSavingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadMembershipDevidenEnhanced", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadMembershipDevidenEnhanced(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strResourceCode As String, ByVal strSHUYear As String, ByVal strUserId As String, ByVal strApp_Id As String) As String
            Dim results() As Object = Me.Invoke("UploadMembershipDevidenEnhanced", New Object() {adoDS, strPeriod, strResourceCode, strSHUYear, strUserId, strApp_Id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUploadMembershipDevidenEnhanced(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strResourceCode As String, ByVal strSHUYear As String, ByVal strUserId As String, ByVal strApp_Id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UploadMembershipDevidenEnhanced", New Object() {adoDS, strPeriod, strResourceCode, strSHUYear, strUserId, strApp_Id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUploadMembershipDevidenEnhanced(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadMembershipDevidenEnhancedAsync(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strResourceCode As String, ByVal strSHUYear As String, ByVal strUserId As String, ByVal strApp_Id As String)
            Me.UploadMembershipDevidenEnhancedAsync(adoDS, strPeriod, strResourceCode, strSHUYear, strUserId, strApp_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadMembershipDevidenEnhancedAsync(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strResourceCode As String, ByVal strSHUYear As String, ByVal strUserId As String, ByVal strApp_Id As String, ByVal userState As Object)
            If (Me.UploadMembershipDevidenEnhancedOperationCompleted Is Nothing) Then
                Me.UploadMembershipDevidenEnhancedOperationCompleted = AddressOf Me.OnUploadMembershipDevidenEnhancedOperationCompleted
            End If
            Me.InvokeAsync("UploadMembershipDevidenEnhanced", New Object() {adoDS, strPeriod, strResourceCode, strSHUYear, strUserId, strApp_Id}, Me.UploadMembershipDevidenEnhancedOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadMembershipDevidenEnhancedOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadMembershipDevidenEnhancedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadMembershipDevidenEnhancedCompleted(Me, New UploadMembershipDevidenEnhancedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadMembershipSpecialIntrest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadMembershipSpecialIntrest(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String) As String
            Dim results() As Object = Me.Invoke("UploadMembershipSpecialIntrest", New Object() {adoDS, strPeriod, strUserId, strApp_Id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUploadMembershipSpecialIntrest(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UploadMembershipSpecialIntrest", New Object() {adoDS, strPeriod, strUserId, strApp_Id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUploadMembershipSpecialIntrest(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadMembershipSpecialIntrestAsync(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String)
            Me.UploadMembershipSpecialIntrestAsync(adoDS, strPeriod, strUserId, strApp_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadMembershipSpecialIntrestAsync(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String, ByVal userState As Object)
            If (Me.UploadMembershipSpecialIntrestOperationCompleted Is Nothing) Then
                Me.UploadMembershipSpecialIntrestOperationCompleted = AddressOf Me.OnUploadMembershipSpecialIntrestOperationCompleted
            End If
            Me.InvokeAsync("UploadMembershipSpecialIntrest", New Object() {adoDS, strPeriod, strUserId, strApp_Id}, Me.UploadMembershipSpecialIntrestOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadMembershipSpecialIntrestOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadMembershipSpecialIntrestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadMembershipSpecialIntrestCompleted(Me, New UploadMembershipSpecialIntrestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMonthlyIntrestPayment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMonthlyIntrestPayment(ByVal strPeriod As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMonthlyIntrestPayment", New Object() {strPeriod, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMonthlyIntrestPayment(ByVal strPeriod As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMonthlyIntrestPayment", New Object() {strPeriod, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMonthlyIntrestPayment(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMonthlyIntrestPaymentAsync(ByVal strPeriod As String, ByVal strAPP_ID As String)
            Me.GetMonthlyIntrestPaymentAsync(strPeriod, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMonthlyIntrestPaymentAsync(ByVal strPeriod As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMonthlyIntrestPaymentOperationCompleted Is Nothing) Then
                Me.GetMonthlyIntrestPaymentOperationCompleted = AddressOf Me.OnGetMonthlyIntrestPaymentOperationCompleted
            End If
            Me.InvokeAsync("GetMonthlyIntrestPayment", New Object() {strPeriod, strAPP_ID}, Me.GetMonthlyIntrestPaymentOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMonthlyIntrestPaymentOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMonthlyIntrestPaymentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMonthlyIntrestPaymentCompleted(Me, New GetMonthlyIntrestPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMonthlyAdminDeduction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMonthlyAdminDeduction(ByVal strPeriod As String, ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetMonthlyAdminDeduction", New Object() {strPeriod, strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMonthlyAdminDeduction(ByVal strPeriod As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMonthlyAdminDeduction", New Object() {strPeriod, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMonthlyAdminDeduction(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMonthlyAdminDeductionAsync(ByVal strPeriod As String, ByVal strAPP_ID As String)
            Me.GetMonthlyAdminDeductionAsync(strPeriod, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMonthlyAdminDeductionAsync(ByVal strPeriod As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMonthlyAdminDeductionOperationCompleted Is Nothing) Then
                Me.GetMonthlyAdminDeductionOperationCompleted = AddressOf Me.OnGetMonthlyAdminDeductionOperationCompleted
            End If
            Me.InvokeAsync("GetMonthlyAdminDeduction", New Object() {strPeriod, strAPP_ID}, Me.GetMonthlyAdminDeductionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMonthlyAdminDeductionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMonthlyAdminDeductionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMonthlyAdminDeductionCompleted(Me, New GetMonthlyAdminDeductionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIntrestType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetIntrestType(ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetIntrestType", New Object() {strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetIntrestType(ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetIntrestType", New Object() {strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetIntrestType(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetIntrestTypeAsync(ByVal strAPP_ID As String)
            Me.GetIntrestTypeAsync(strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetIntrestTypeAsync(ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetIntrestTypeOperationCompleted Is Nothing) Then
                Me.GetIntrestTypeOperationCompleted = AddressOf Me.OnGetIntrestTypeOperationCompleted
            End If
            Me.InvokeAsync("GetIntrestType", New Object() {strAPP_ID}, Me.GetIntrestTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetIntrestTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetIntrestTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetIntrestTypeCompleted(Me, New GetIntrestTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransCodeDB", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransCodeDB(ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTransCodeDB", New Object() {strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTransCodeDB(ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTransCodeDB", New Object() {strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTransCodeDB(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransCodeDBAsync(ByVal strAPP_ID As String)
            Me.GetTransCodeDBAsync(strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransCodeDBAsync(ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetTransCodeDBOperationCompleted Is Nothing) Then
                Me.GetTransCodeDBOperationCompleted = AddressOf Me.OnGetTransCodeDBOperationCompleted
            End If
            Me.InvokeAsync("GetTransCodeDB", New Object() {strAPP_ID}, Me.GetTransCodeDBOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransCodeDBOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransCodeDBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransCodeDBCompleted(Me, New GetTransCodeDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransCodeCR", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransCodeCR(ByVal strAPP_ID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTransCodeCR", New Object() {strAPP_ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTransCodeCR(ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTransCodeCR", New Object() {strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTransCodeCR(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransCodeCRAsync(ByVal strAPP_ID As String)
            Me.GetTransCodeCRAsync(strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransCodeCRAsync(ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetTransCodeCROperationCompleted Is Nothing) Then
                Me.GetTransCodeCROperationCompleted = AddressOf Me.OnGetTransCodeCROperationCompleted
            End If
            Me.InvokeAsync("GetTransCodeCR", New Object() {strAPP_ID}, Me.GetTransCodeCROperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransCodeCROperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransCodeCRCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransCodeCRCompleted(Me, New GetTransCodeCRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadLoanDeduction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadLoanDeduction(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String) As String
            Dim results() As Object = Me.Invoke("UploadLoanDeduction", New Object() {adoDS, strPeriod, strUserId, strApp_Id})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginUploadLoanDeduction(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UploadLoanDeduction", New Object() {adoDS, strPeriod, strUserId, strApp_Id}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndUploadLoanDeduction(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadLoanDeductionAsync(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String)
            Me.UploadLoanDeductionAsync(adoDS, strPeriod, strUserId, strApp_Id, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadLoanDeductionAsync(ByVal adoDS As System.Data.DataSet, ByVal strPeriod As String, ByVal strUserId As String, ByVal strApp_Id As String, ByVal userState As Object)
            If (Me.UploadLoanDeductionOperationCompleted Is Nothing) Then
                Me.UploadLoanDeductionOperationCompleted = AddressOf Me.OnUploadLoanDeductionOperationCompleted
            End If
            Me.InvokeAsync("UploadLoanDeduction", New Object() {adoDS, strPeriod, strUserId, strApp_Id}, Me.UploadLoanDeductionOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadLoanDeductionOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadLoanDeductionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadLoanDeductionCompleted(Me, New UploadLoanDeductionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLoanDeductionUploadStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLoanDeductionUploadStatus(ByVal strPeriod As String, ByVal strAPP_ID As String) As Boolean
            Dim results() As Object = Me.Invoke("GetLoanDeductionUploadStatus", New Object() {strPeriod, strAPP_ID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginGetLoanDeductionUploadStatus(ByVal strPeriod As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetLoanDeductionUploadStatus", New Object() {strPeriod, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetLoanDeductionUploadStatus(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLoanDeductionUploadStatusAsync(ByVal strPeriod As String, ByVal strAPP_ID As String)
            Me.GetLoanDeductionUploadStatusAsync(strPeriod, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLoanDeductionUploadStatusAsync(ByVal strPeriod As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetLoanDeductionUploadStatusOperationCompleted Is Nothing) Then
                Me.GetLoanDeductionUploadStatusOperationCompleted = AddressOf Me.OnGetLoanDeductionUploadStatusOperationCompleted
            End If
            Me.InvokeAsync("GetLoanDeductionUploadStatus", New Object() {strPeriod, strAPP_ID}, Me.GetLoanDeductionUploadStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLoanDeductionUploadStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLoanDeductionUploadStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLoanDeductionUploadStatusCompleted(Me, New GetLoanDeductionUploadStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemberPin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMemberPin(ByVal strMembershipNo As String, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("GetMemberPin", New Object() {strMembershipNo, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetMemberPin(ByVal strMembershipNo As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMemberPin", New Object() {strMembershipNo, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetMemberPin(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMemberPinAsync(ByVal strMembershipNo As String, ByVal strAPP_ID As String)
            Me.GetMemberPinAsync(strMembershipNo, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMemberPinAsync(ByVal strMembershipNo As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.GetMemberPinOperationCompleted Is Nothing) Then
                Me.GetMemberPinOperationCompleted = AddressOf Me.OnGetMemberPinOperationCompleted
            End If
            Me.InvokeAsync("GetMemberPin", New Object() {strMembershipNo, strAPP_ID}, Me.GetMemberPinOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMemberPinOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMemberPinCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMemberPinCompleted(Me, New GetMemberPinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUpdateNewPin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddUpdateNewPin(ByVal strMembershipNo As String, ByVal strPin As String, ByVal strAPP_ID As String) As String
            Dim results() As Object = Me.Invoke("AddUpdateNewPin", New Object() {strMembershipNo, strPin, strAPP_ID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginAddUpdateNewPin(ByVal strMembershipNo As String, ByVal strPin As String, ByVal strAPP_ID As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("AddUpdateNewPin", New Object() {strMembershipNo, strPin, strAPP_ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndAddUpdateNewPin(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddUpdateNewPinAsync(ByVal strMembershipNo As String, ByVal strPin As String, ByVal strAPP_ID As String)
            Me.AddUpdateNewPinAsync(strMembershipNo, strPin, strAPP_ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddUpdateNewPinAsync(ByVal strMembershipNo As String, ByVal strPin As String, ByVal strAPP_ID As String, ByVal userState As Object)
            If (Me.AddUpdateNewPinOperationCompleted Is Nothing) Then
                Me.AddUpdateNewPinOperationCompleted = AddressOf Me.OnAddUpdateNewPinOperationCompleted
            End If
            Me.InvokeAsync("AddUpdateNewPin", New Object() {strMembershipNo, strPin, strAPP_ID}, Me.AddUpdateNewPinOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddUpdateNewPinOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddUpdateNewPinCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddUpdateNewPinCompleted(Me, New AddUpdateNewPinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMemberTransactionSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetMemberTransactionSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMemberTransactionSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMemberYearlyIntrestValCompletedEventHandler(ByVal sender As Object, ByVal e As GetMemberYearlyIntrestValCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMemberYearlyIntrestValCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMonthlyTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As GetMonthlyTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMonthlyTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMonthlyTransactionByTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetMonthlyTransactionByTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMonthlyTransactionByTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMonthlyInterestCompletedEventHandler(ByVal sender As Object, ByVal e As GetMonthlyInterestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMonthlyInterestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub MembershipClosingProcessCompletedEventHandler(ByVal sender As Object, ByVal e As MembershipClosingProcessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MembershipClosingProcessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub MembershipClosingProcessOrigCompletedEventHandler(ByVal sender As Object, ByVal e As MembershipClosingProcessOrigCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MembershipClosingProcessOrigCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UploadMembershipTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As UploadMembershipTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadMembershipTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMembershipAcctPeriodCompletedEventHandler(ByVal sender As Object, ByVal e As GetMembershipAcctPeriodCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMembershipAcctPeriodCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateMemberCapitalInfoCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateMemberCapitalInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateMemberCapitalInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddNewMemberCapitalCompletedEventHandler(ByVal sender As Object, ByVal e As AddNewMemberCapitalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddNewMemberCapitalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMemberCapitalInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetMemberCapitalInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMemberCapitalInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMemberDetailCapitalInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetMemberDetailCapitalInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMemberDetailCapitalInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMemberNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetMemberNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMemberNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateMembershipSystemParametersCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateMembershipSystemParametersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateMembershipSystemParametersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMemberSystemInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetMemberSystemInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMemberSystemInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetDetailMemberInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetDetailMemberInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDetailMemberInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMemberInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetMemberInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMemberInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateMemberInfoCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateMemberInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateMemberInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DeleteMemberInfoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddNewMemberInfoCompletedEventHandler(ByVal sender As Object, ByVal e As AddNewMemberInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddNewMemberInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTransactionInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransactionInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransactionInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTransactionDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransactionDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransactionDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMemberInstallmentSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetMemberInstallmentSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMemberInstallmentSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetInstallmentInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetInstallmentInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetInstallmentInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddNewTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As AddNewTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddNewTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UpdateTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTotalSavingCompletedEventHandler(ByVal sender As Object, ByVal e As GetTotalSavingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTotalSavingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UploadMembershipDevidenEnhancedCompletedEventHandler(ByVal sender As Object, ByVal e As UploadMembershipDevidenEnhancedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadMembershipDevidenEnhancedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UploadMembershipSpecialIntrestCompletedEventHandler(ByVal sender As Object, ByVal e As UploadMembershipSpecialIntrestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadMembershipSpecialIntrestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMonthlyIntrestPaymentCompletedEventHandler(ByVal sender As Object, ByVal e As GetMonthlyIntrestPaymentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMonthlyIntrestPaymentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMonthlyAdminDeductionCompletedEventHandler(ByVal sender As Object, ByVal e As GetMonthlyAdminDeductionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMonthlyAdminDeductionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetIntrestTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetIntrestTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetIntrestTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTransCodeDBCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransCodeDBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransCodeDBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetTransCodeCRCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransCodeCRCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransCodeCRCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub UploadLoanDeductionCompletedEventHandler(ByVal sender As Object, ByVal e As UploadLoanDeductionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadLoanDeductionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetLoanDeductionUploadStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetLoanDeductionUploadStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLoanDeductionUploadStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub GetMemberPinCompletedEventHandler(ByVal sender As Object, ByVal e As GetMemberPinCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMemberPinCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub AddUpdateNewPinCompletedEventHandler(ByVal sender As Object, ByVal e As AddUpdateNewPinCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddUpdateNewPinCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
